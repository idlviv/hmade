{"version":3,"sources":["./src/app/components/social/comment/comment.component.html","./src/app/components/social/comments-list/comments-list.component.html","./src/app/components/social/comments/comments.component.html","./src/app/components/social/social.component.html","./src/app/components/social/unreaded-comments/unreaded-comments.component.html","./src/app/components/social/comment/comment.component.scss","./src/app/components/social/comment/comment.component.ts","./src/app/components/social/comments-list/comments-list.component.scss","./src/app/components/social/comments-list/comments-list.component.ts","./src/app/components/social/comments/comments.component.scss","./src/app/components/social/comments/comments.component.ts","./src/app/components/social/social-routing.module.ts","./src/app/components/social/social.component.scss","./src/app/components/social/social.component.ts","./src/app/components/social/social.module.ts","./src/app/components/social/unreaded-comments/unreaded-comments.component.scss","./src/app/components/social/unreaded-comments/unreaded-comments.component.ts"],"names":[],"mappings":"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","file":"default~components-dashboard-dashboard-module~components-mcs-mcs-module~components-social-social-module.js","sourcesContent":["export default \"<!-- <mat-card class=\\\"comments\\\"> -->\\r\\n  <div class=\\\"row comment animationAppear1s\\\" [ngClass]=\\\"{'muted-strong': !comment.display}\\\"\\r\\n    fxLayout=\\\"row\\\">\\r\\n    <div class=\\\"cell\\\" fxFlex=\\\"64px\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n      <img *ngIf=\\\"comment.user && comment.user.avatar\\\" class=\\\"responsive-image\\\" src=\\\"{{comment.user.role === 'google' ? \\r\\n            comment.user.avatar :\\r\\n            config.imgPath +\\r\\n            config.cloudinary.cloud_name +\\r\\n            '/c_fill,w_50,h_50,f_auto/' +\\r\\n            comment.user.avatar}}\\\" alt=\\\"avatar\\\">\\r\\n      <img *ngIf=\\\"!comment.user\\\" class=\\\"responsive-image\\\" src=\\\"{{\\r\\n            config.imgPath +\\r\\n            config.cloudinary.cloud_name +\\r\\n            '/c_fill,w_50,h_50,f_auto/' +\\r\\n            config.defaultAvatar}}\\\" alt=\\\"avatar\\\">\\r\\n    </div>\\r\\n    <div class=\\\"cell\\\" fxFlex=\\\"calc(90%-128px)\\\">\\r\\n      <p>\\r\\n        <span class=\\\"mat-body-2 bold\\\">\\r\\n          {{comment.user && comment.user.login ? comment.user.name + ' ' + comment.user.surname : 'Гість'}}\\r\\n        </span>\\r\\n        <span fxFlex></span>\\r\\n        <span class=\\\"mat-body-1\\\">{{comment.commentedAt | date: 'dd.MM.yyyy HH:mm'}}</span>\\r\\n      </p>\\r\\n      <p class=\\\"mat-body-1 text-align-justify\\\">{{comment.comment}}</p>\\r\\n    </div>\\r\\n    <div class=\\\"cell wrap\\\" fxFlex=\\\"64px\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n      <p *ngIf=\\\"allowTo('manager')\\\" class=\\\"no-margin\\\">\\r\\n        <button class=\\\"mat-icon-button\\\" (click)=\\\"deleteComment(comment)\\\"\\r\\n          aria-label=\\\"Delete comment\\\">\\r\\n          <mat-icon class=\\\"mat-18\\\">delete_outline</mat-icon>\\r\\n        </button></p>\\r\\n      <p *ngIf=\\\"allowTo('manager') && !comment.display\\\" class=\\\"no-margin\\\">\\r\\n        <button class=\\\"mat-icon-button\\\" (click)=\\\"displayComment(true, comment._id)\\\" aria-label=\\\"Display comment\\\">\\r\\n          <mat-icon class=\\\"mat-18\\\">play_circle_outline</mat-icon>\\r\\n        </button>\\r\\n      </p>\\r\\n      <p *ngIf=\\\"allowTo('manager') && comment.display\\\" class=\\\"no-margin\\\">\\r\\n        <button class=\\\"mat-icon-button\\\" (click)=\\\"displayComment(false, comment._id)\\\" aria-label=\\\"Hide comment\\\">\\r\\n          <mat-icon class=\\\"mat-18\\\">pause_circle_outline</mat-icon>\\r\\n        </button>\\r\\n      </p>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n<!-- </mat-card> -->\"","export default \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"app-container-h\\\">\\r\\n    <div class=\\\"row\\\" fxLayout=\\\"row\\\">\\r\\n      <div *ngIf=\\\"comments\\\" class=\\\"cell\\\">\\r\\n        <p></p>\\r\\n        <p class=\\\"mat-body-1\\\">Показано<span class=\\\"mat-body-2\\\"> {{comments.length}}\\r\\n          </span>коментарів з<span class=\\\"mat-body-2\\\"> {{commentsTotalLength || 0}}</span></p>\\r\\n      </div>\\r\\n    </div>\\r\\n    <mat-card class=\\\"comments\\\">\\r\\n      <app-comment class=\\\"comment-wrapper\\\" [comment]=\\\"comment\\\" (deleteCommentEmitter)=\\\"deleteComment($event)\\\"\\r\\n        (displayCommentEmitter)=\\\"displayComment($event)\\\" *ngFor=\\\"let comment of comments\\\"></app-comment>\\r\\n\\r\\n      <div *ngIf=\\\"processing\\\" class=\\\"row animationAppear1s\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n        <div class=\\\"cell\\\" fxFlex=\\\"100\\\">\\r\\n          <mat-progress-bar mode=\\\"indeterminate\\\"></mat-progress-bar>\\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n</div>\"","export default \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"app-container-h\\\">\\r\\n        <mat-card>\\r\\n            <form [formGroup]=\\\"commentForm\\\" #f=\\\"ngForm\\\" novalidate>\\r\\n                <div class=\\\"row\\\" fxLayout=\\\"row\\\">\\r\\n                  <div class=\\\"cell\\\" fxFlex=\\\"10\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n\\r\\n                    <img *ngIf=\\\"allowTo('guest')\\\" class=\\\"responsive-image\\\"\\r\\n                      src=\\\"{{user.role === 'google' ? \\r\\n                        user.avatar :\\r\\n                        config.imgPath +\\r\\n                        config.cloudinary.cloud_name +\\r\\n                        '/c_fill,w_50,h_50,f_auto/' +\\r\\n                        user.avatar}}\\\" alt=\\\"avatar\\\">\\r\\n                    <img *ngIf=\\\"!user\\\" class=\\\"responsive-image\\\"\\r\\n                      src=\\\"{{\\r\\n                        config.imgPath +\\r\\n                        config.cloudinary.cloud_name +\\r\\n                        '/c_fill,w_50,h_50,f_auto/' +\\r\\n                        config.defaultAvatar}}\\\" alt=\\\"avatar\\\">\\r\\n\\r\\n                  </div>\\r\\n                    <mat-form-field class=\\\"cell\\\" fxFlex=\\\"80\\\">\\r\\n                      <textarea matInput\\r\\n                        [placeholder]=\\\"allowTo('user') ?\\r\\n                          'Коментар' :\\r\\n                          allowTo('guest') ?\\r\\n                            'Для відправки коментарів верифікуйте пошту' :\\r\\n                            'Коментарі можуть залишати лише зареєстровані користувачі'\\\"\\r\\n                        formControlName=\\\"comment\\\" required>\\r\\n                      </textarea>\\r\\n                      <mat-error\\r\\n                        *ngIf=\\\"(commentForm.get('comment').errors?.minlength ||\\r\\n                        commentForm.get('comment').errors?.maxlength ||\\r\\n                        commentForm.get('comment').errors?.required) &&\\r\\n                        commentForm.get('comment').touched\\\">\\r\\n                        Довжина повинна бути від 3 до 200 символів\\r\\n                      </mat-error>\\r\\n                      <mat-error\\r\\n                        *ngIf=\\\"commentForm.get('comment').errors?.pattern &&\\r\\n                        commentForm.get('comment').touched\\\">\\r\\n                        Не використовуйте спеціальні символи\\r\\n                      </mat-error>\\r\\n                    </mat-form-field>\\r\\n                  <div class=\\\"cell\\\" fxFlex=\\\"10\\\">\\r\\n                    <button mat-icon-button (click)=\\\"sendComment()\\\" aria-label=\\\"Send\\\"\\r\\n                     [disabled]=\\\"!commentForm.valid || !allowTo('user')\\\">\\r\\n                      <mat-icon>send</mat-icon>\\r\\n                    </button>\\r\\n           \\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\">\\r\\n                  <re-captcha [ngClass]=\\\"{'display-none': !commentForm.get('comment').valid}\\\"\\r\\n                    [formControlName]=\\\"'recaptcha'\\\" #recaptchaRef\\r\\n                    siteKey=\\\"{{config.recaptchaSiteKey}}\\\">\\r\\n                  </re-captcha> \\r\\n                </div>\\r\\n              </form>\\r\\n        </mat-card>\\r\\n    <!-- </div> -->\\r\\n\\r\\n    \\r\\n    <!-- <div class=\\\"row\\\" fxLayout=\\\"row\\\">\\r\\n      <div *ngIf=\\\"comments\\\" class=\\\"cell\\\">\\r\\n        <p class=\\\"mat-body-1\\\">Показано<span class=\\\"mat-body-2\\\"> {{comments.length}} \\r\\n        </span>коментарів з<span class=\\\"mat-body-2\\\"> {{commentsTotalLength || 0}}</span></p>\\r\\n      </div>\\r\\n    </div>\\r\\n    <mat-card class=\\\"comments\\\">\\r\\n      <app-comment class=\\\"comment\\\" [comment]=\\\"comment\\\" \\r\\n      (deleteCommentEmitter)=\\\"deleteComment($event)\\\" (displayCommentEmitter)=\\\"displayComment($event)\\\"\\r\\n      *ngFor=\\\"let comment of comments\\\"></app-comment>\\r\\n    </mat-card> -->\\r\\n\\r\\n    <!-- <mat-card class=\\\"comments\\\">\\r\\n          <div class=\\\"row comment\\\" [ngClass]=\\\"{'muted-strong': !comment.display}\\\"\\r\\n     *ngFor=\\\"let comment of comments\\\" fxLayout=\\\"row\\\">\\r\\n      <div  class=\\\"cell\\\" fxFlex=\\\"10\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n                <img *ngIf=\\\"comment.user && comment.user.avatar\\\" class=\\\"responsive-image\\\"\\r\\n                  src=\\\"{{comment.user.role === 'google' ? \\r\\n                    comment.user.avatar :\\r\\n                    config.imgPath +\\r\\n                    config.cloudinary.cloud_name +\\r\\n                    '/c_fill,w_50,h_50,f_auto/' +\\r\\n                    comment.user.avatar}}\\\" alt=\\\"avatar\\\">\\r\\n                <img *ngIf=\\\"!comment.user\\\" class=\\\"responsive-image\\\"\\r\\n                  src=\\\"{{\\r\\n                    config.imgPath +\\r\\n                    config.cloudinary.cloud_name +\\r\\n                    '/c_fill,w_50,h_50,f_auto/' +\\r\\n                    config.defaultAvatar}}\\\" alt=\\\"avatar\\\">\\r\\n      </div>\\r\\n      <div class=\\\"cell\\\" fxFlex=\\\"80\\\">\\r\\n        <p>\\r\\n          <span class=\\\"mat-body-2 bold\\\">\\r\\n            {{comment.user && comment.user.login ? comment.user.name + ' ' + comment.user.surname : 'Гість'}}\\r\\n          </span>\\r\\n          <span fxFlex></span>\\r\\n          <span class=\\\"mat-body-1\\\">{{comment.commentedAt | date: 'dd.MM.yyyy HH:mm'}}</span>\\r\\n        </p>\\r\\n        <p class=\\\"text-align-justify\\\">{{comment.comment}}</p>\\r\\n      </div>\\r\\n      <div class=\\\"cell\\\" fxFlex=\\\"10\\\">\\r\\n        <p *ngIf=\\\"allowTo('manager')\\\"><button class=\\\"mat-icon-button\\\" (click)=\\\"deleteComment(comment)\\\" aria-label=\\\"Delete comment\\\">\\r\\n          <mat-icon class=\\\"mat-18\\\">delete_outline</mat-icon></button></p>\\r\\n        <p *ngIf=\\\"allowTo('manager') && !comment.display\\\">\\r\\n          <button class=\\\"mat-icon-button\\\" (click)=\\\"displayComment(true, comment._id)\\\" aria-label=\\\"Display comment\\\">\\r\\n            <mat-icon class=\\\"mat-18\\\">play_circle_outline</mat-icon></button>\\r\\n        </p>\\r\\n        <p *ngIf=\\\"allowTo('manager') && comment.display\\\">\\r\\n          <button class=\\\"mat-icon-button\\\" (click)=\\\"displayComment(false, comment._id)\\\" aria-label=\\\"Hide comment\\\">\\r\\n            <mat-icon class=\\\"mat-18\\\">pause_circle_outline</mat-icon></button>\\r\\n        </p>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </mat-card> -->\\r\\n\\r\\n    <!-- <div *ngIf=\\\"processing\\\" class=\\\"row\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n      <div class=\\\"cell\\\" fxFlex=\\\"100\\\">\\r\\n        <mat-progress-bar mode=\\\"indeterminate\\\"></mat-progress-bar>\\r\\n      </div>\\r\\n    </div> -->\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<div id=\\\"mcs\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"app-container-h app-container-v\\\">\\r\\n      <div class=\\\"container\\\">\\r\\n        <router-outlet></router-outlet>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","export default \"<div class=\\\"row\\\" fxLayout=\\\"row\\\">\\r\\n  <div class=\\\"cell\\\" fxFlex=\\\"100\\\" fxLayout=\\\"row\\\">\\r\\n    <h2 *ngIf=\\\"processedUnreadedCommentsParents?.length\\\" class=\\\"mat-h2\\\" fxflex>Нові коментарі</h2>\\r\\n    <h2 *ngIf=\\\"!processedUnreadedCommentsParents?.length && pageLoaded\\\" class=\\\"mat-h2 animationAppear2s\\\" fxflex>Нових коментарів немає</h2>\\r\\n    <div fxFlex></div>\\r\\n    <div>\\r\\n      <a *ngIf=\\\"processedUnreadedCommentsParents?.length\\\" color=\\\"accent\\\"\\r\\n        mat-flat-button (click)=\\\"markCommentsAsReaded()\\\" fxflex>Позначити всі прочитаними</a>\\r\\n    </div> \\r\\n  </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"processedUnreadedCommentsParents?.length\\\" class=\\\"row\\\" fxLayout=\\\"row\\\">\\r\\n  <div *ngFor=\\\"let processedUnreadedCommentsParent of processedUnreadedCommentsParents; let i= index;\\\" class=\\\"cell\\\" fxFlex=\\\"100\\\">\\r\\n    <h3 class=\\\"mat-h3 no-margin\\\"><a aria-label=\\\"Open\\\" [routerLink]=\\\"['/mcs','show', processedUnreadedCommentsParent._id]\\\"\\r\\n      [routerLinkActive]=\\\"['accent-background']\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\">\\r\\n      Майстер-клас {{processedUnreadedCommentsParent.name[0]}}</a></h3>\\r\\n    <app-comments-list [parent_id]=\\\"processedUnreadedCommentsParent._id\\\" [parentCategory]=\\\"'mc'\\\" [commentsReadedTillFilter]=\\\"true\\\"\\r\\n    (processedUnreadedComments)=\\\"onProcessedUnreadedComments($event)\\\"></app-comments-list>\\r\\n  </div>\\r\\n</div>\\r\\n     \"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc29jaWFsL2NvbW1lbnQvY29tbWVudC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { IComment } from 'src/app/interfaces/interface';\r\nimport { NgUserManService } from 'ng-user-man';\r\nimport { config } from '../../../app.config';\r\n\r\n@Component({\r\n  selector: 'app-comment',\r\n  templateUrl: './comment.component.html',\r\n  styleUrls: ['./comment.component.scss']\r\n})\r\nexport class CommentComponent implements OnInit {\r\n  @Input() comment: any;\r\n  @Output() deleteCommentEmitter = new EventEmitter<IComment>();\r\n  @Output() displayCommentEmitter = new EventEmitter<any>();\r\n\r\n  config = config;\r\n\r\n  constructor(\r\n    private ngUserManService: NgUserManService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  deleteComment(comment: IComment): void {\r\n    this.deleteCommentEmitter.emit(comment);\r\n  }\r\n\r\n  displayComment(display: boolean, comment_id: string) {\r\n    this.displayCommentEmitter.emit({display, comment_id});\r\n  }\r\n\r\n  allowTo(permitedRole: string): boolean {\r\n    // this.user = this.ngUserManService.userCookieExtractor();\r\n    return this.ngUserManService.allowTo(permitedRole);\r\n  }\r\n\r\n  restrictTo(restrictedRoles: string[]): boolean {\r\n    // this.user = this.ngUserManService.userCookieExtractor();\r\n    return this.ngUserManService.restrictTo(restrictedRoles);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc29jaWFsL2NvbW1lbnRzLWxpc3QvY29tbWVudHMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input, HostListener, Output, EventEmitter } from '@angular/core';\r\nimport { of } from 'rxjs';\r\nimport { SocialService } from 'src/app/services/social.service';\r\nimport { mergeMap } from 'rxjs/operators';\r\nimport { IConfirmPopupData, IComment } from 'src/app/interfaces/interface';\r\nimport { MatDialog } from '@angular/material';\r\nimport { ConfirmPopupComponent } from '../../shared/confirm-popup/confirm-popup.component';\r\nimport { SharedService } from 'ng-user-man';\r\nimport { NgUserManService } from 'ng-user-man';\r\nimport { IUser } from 'src/app/interfaces/user-interface';\r\n\r\n@Component({\r\n  selector: 'app-comments-list',\r\n  templateUrl: './comments-list.component.html',\r\n  styleUrls: ['./comments-list.component.scss']\r\n})\r\nexport class CommentsListComponent implements OnInit {\r\n  comments = <IComment[]>[];\r\n  commentsTotalLength: number;\r\n  @Input() parent_id: string;\r\n  @Input() parentCategory: string;\r\n  @Input() commentsReadedTillFilter: boolean;\r\n  @Output() processedUnreadedComments = new EventEmitter<any>();\r\n\r\n  processing = false;\r\n  user: IUser;\r\n\r\n  constructor(\r\n    private ngUserManService: NgUserManService,\r\n    private socialService: SocialService,\r\n    public dialog: MatDialog,\r\n    private sharedService: SharedService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.sharedService.getEventToReloadComments()\r\n      .pipe(\r\n        mergeMap(result => {\r\n          if (result) {\r\n            console.log('reload-list', result);\r\n            const { sort, skip, limit, displayFilter } = result;\r\n            // this.loadComments(sort, skip, limit, displayFilter);\r\n            return this.socialService.getComments(this.parent_id, this.parentCategory,\r\n              sort, skip, limit, displayFilter, this.commentsReadedTillFilter);\r\n          } else {\r\n            // not needed to reload, do nothing\r\n            return of({ comments: [], commentsTotalLength: 0 });\r\n          }\r\n        }\r\n        )\r\n      )\r\n      .subscribe(result => {\r\n        if (result.comments.length) {\r\n          this.comments = result.comments;\r\n          this.commentsTotalLength = result.commentsTotalLength;\r\n        }\r\n      },\r\n        err => console.log('add comment err', err)\r\n      );\r\n\r\n    this.loadComments(-1, 0, 5, !this.allowTo('manager'));\r\n  }\r\n\r\n  // Listening of page bottom reached\r\n  @HostListener('window:scroll', ['$event'])\r\n  onScroll(event): void {\r\n    if ((window.innerHeight + pageYOffset) >= document.body.offsetHeight - 2) {\r\n      if (\r\n        !this.processing &&\r\n        this.commentsTotalLength !== this.comments.length &&\r\n        this.commentsTotalLength\r\n      ) {\r\n        this.loadComments(-1, this.comments.length, 5, !this.allowTo('manager'));\r\n      }\r\n    }\r\n  }\r\n\r\n  loadComments(sort: number, skip: number, limit: number, displayFilter: boolean) {\r\n    this.processing = true;\r\n    this.socialService.getComments(this.parent_id, this.parentCategory, sort, skip, \r\n      limit, displayFilter, this.commentsReadedTillFilter)\r\n      .subscribe(result => {\r\n        this.comments.push(...result.comments);\r\n        this.commentsTotalLength = result.commentsTotalLength;\r\n        this.processing = false;\r\n        this.checkAllCommentsLoaded();\r\n      });\r\n  }\r\n\r\n  checkAllCommentsLoaded() {\r\n    if (this.commentsTotalLength === this.comments.length) {\r\n      this.processedUnreadedComments.emit(this.parent_id);\r\n    }\r\n  }\r\n\r\n  deleteComment(event): void {\r\n    const comment = event;\r\n    const confirmObject = <IConfirmPopupData>{\r\n      message: `Дійсно видалити коментар: ${comment.comment} ?`,\r\n      payload: { _id: comment._id }\r\n    };\r\n\r\n    const dialogRef = this.dialog.open(ConfirmPopupComponent, {\r\n      data: confirmObject,\r\n      // panelClass: 'custom-dialog-container'\r\n    });\r\n\r\n    dialogRef.afterClosed()\r\n      .subscribe(res => {\r\n        if (res && res.choise) {\r\n          this.socialService.deleteComment(this.parent_id, this.parentCategory, res.payload._id)\r\n            .pipe(\r\n              mergeMap(result => {\r\n                if (result) {\r\n                  // successfuly delete\r\n                  this.sharedService.sharingEventToReloadComments();\r\n                  // this.sharedService.sharingEvent(['userChangeStatusEmitter']);\r\n                  return this.socialService.getComments(\r\n                    this.parent_id, this.parentCategory, -1, 0, this.comments.length,\r\n                    !this.allowTo('manager'), this.commentsReadedTillFilter\r\n                  );\r\n                } else {\r\n                  // not delete, do nothing\r\n                  return of(null);\r\n                }\r\n              }\r\n              )\r\n            )\r\n            .subscribe(result => {\r\n              if (result) {\r\n                this.comments = result.comments;\r\n                this.commentsTotalLength = result.commentsTotalLength;\r\n                this.checkAllCommentsLoaded();\r\n              }\r\n            },\r\n              err => console.log('add comment err', err)\r\n            );\r\n        }\r\n      },\r\n        err => console.log('err delete', err)\r\n      );\r\n  }\r\n\r\n  displayComment(event) {\r\n    const display = event.display;\r\n    const comment_id = event.comment_id;\r\n    this.socialService.displayComment(this.parent_id, this.parentCategory, display, comment_id)\r\n      .pipe(\r\n        mergeMap(result => {\r\n          if (result) {\r\n            // successfuly updated\r\n            this.sharedService.sharingEventToReloadComments();\r\n            // this.sharedService.sharingEvent(['userChangeStatusEmitter']);\r\n            return this.socialService.getComments(\r\n              this.parent_id, this.parentCategory, -1, 0, this.comments.length, !this.allowTo('manager'), this.commentsReadedTillFilter\r\n            );\r\n          } else {\r\n            // not added, do nothing\r\n            return of({ comments: [], commentsTotalLength: 0 });\r\n          }\r\n        }\r\n        )\r\n      )\r\n      .subscribe(result => {\r\n        if (result.comments.length) {\r\n          this.comments = result.comments;\r\n          this.commentsTotalLength = result.commentsTotalLength;\r\n          this.checkAllCommentsLoaded();\r\n        }\r\n      },\r\n        err => console.log('add comment err', err)\r\n      );\r\n  }\r\n\r\n  allowTo(permitedRole: string): boolean {\r\n    this.user = this.ngUserManService.userCookieExtractor();\r\n    return this.ngUserManService.allowTo(permitedRole);\r\n  }\r\n\r\n  restrictTo(restrictedRoles: string[]): boolean {\r\n    this.user = this.ngUserManService.userCookieExtractor();\r\n    return this.ngUserManService.restrictTo(restrictedRoles);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc29jaWFsL2NvbW1lbnRzL2NvbW1lbnRzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Input, ViewChild, HostListener } from '@angular/core';\r\nimport { IComment, IConfirmPopupData, IConfirmPopupChoise } from 'src/app/interfaces/interface';\r\nimport { NgUserManService } from 'ng-user-man';\r\nimport { IUser } from 'src/app/interfaces/user-interface';\r\nimport { config } from '../../../app.config';\r\nimport { FormGroup, FormControl, Validators, FormGroupDirective } from '@angular/forms';\r\nimport { of } from 'rxjs';\r\nimport { SocialService } from 'src/app/services/social.service';\r\nimport { mergeMap } from 'rxjs/operators';\r\n// import { MatDialog } from '@angular/material';\r\n// import { ConfirmPopupComponent } from '../../shared/confirm-popup/confirm-popup.component';\r\nimport { SharedService } from 'ng-user-man';\r\n\r\n@Component({\r\n  selector: 'app-comments',\r\n  templateUrl: './comments.component.html',\r\n  styleUrls: ['./comments.component.scss']\r\n})\r\n\r\nexport class CommentsComponent implements OnInit {\r\n  config = config;\r\n  user: IUser;\r\n  comments = <IComment[]>[];\r\n  commentsTotalLength: number;\r\n  @Input() parent_id: string;\r\n  @Input() parentCategory: string;\r\n\r\n  commentForm: FormGroup;\r\n  @ViewChild('f', { static: false }) mcFormDirective: FormGroupDirective;\r\n  @ViewChild('recaptchaRef', { static: false }) recaptchaRef;\r\n\r\n  constructor(\r\n    private ngUserManService: NgUserManService,\r\n    private socialService: SocialService,\r\n    // public dialog: MatDialog,\r\n    private sharedService: SharedService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.commentForm = new FormGroup({\r\n      comment: new FormControl(\r\n        {\r\n          value: '',\r\n          disabled: !this.allowTo('user')\r\n        },\r\n        [\r\n          Validators.required,\r\n          Validators.pattern('[a-zA-Z0-9а-яА-ЯіїєІЇЄ,.\"@%-_\\' ]+'),\r\n          Validators.minLength(3),\r\n          Validators.maxLength(150),\r\n        ]),\r\n        recaptcha: new FormControl('', [\r\n          Validators.required\r\n        ])\r\n    });\r\n  }\r\n\r\n  sendComment() {\r\n    const comment = this.commentForm.get('comment').value;\r\n    const recaptcha = this.commentForm.get('recaptcha').value;\r\n\r\n    this.socialService.addComment(this.parent_id, this.parentCategory, comment, recaptcha)\r\n      .subscribe(result => {\r\n          this.mcFormDirective.resetForm();\r\n          this.sharedService.sharingEventToReloadComments({\r\n            sort: -1,\r\n            skip: 0,\r\n            limit: 5,\r\n            displayFilter: !this.allowTo('manager'),\r\n          });\r\n      },\r\n      err => console.log('add comment err', err)\r\n    );\r\n  }\r\n\r\n  allowTo(permitedRole: string): boolean {\r\n    this.user = this.ngUserManService.userCookieExtractor();\r\n    return this.ngUserManService.allowTo(permitedRole);\r\n  }\r\n\r\n  restrictTo(restrictedRoles: string[]): boolean {\r\n    this.user = this.ngUserManService.userCookieExtractor();\r\n    return this.ngUserManService.restrictTo(restrictedRoles);\r\n  }\r\n}\r\n","import { Routes, RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { SocialComponent } from './social.component';\r\nimport { AuthGuard } from 'src/app/guards/auth.guard';\r\nimport { UnreadedCommentsComponent } from './unreaded-comments/unreaded-comments.component';\r\n\r\nconst socialRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SocialComponent,\r\n    children: [\r\n      {\r\n        path: 'unreaded-comments',\r\n        component: UnreadedCommentsComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { auth: 'user' },\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(socialRoutes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class SocialRoutingModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc29jaWFsL3NvY2lhbC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-social',\r\n  templateUrl: './social.component.html',\r\n  styleUrls: ['./social.component.scss']\r\n})\r\nexport class SocialComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MaterialModule } from '../../material.module';\r\nimport { RecaptchaFormsModule } from 'ng-recaptcha';\r\nimport { RecaptchaModule } from 'ng-recaptcha';\r\nimport { UnreadedCommentsComponent } from './unreaded-comments/unreaded-comments.component';\r\nimport { SocialRoutingModule } from './social-routing.module';\r\nimport { SocialComponent } from './social.component';\r\nimport { CommentsComponent } from './comments/comments.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { CommentComponent } from './comment/comment.component';\r\nimport { CommentsListComponent } from './comments-list/comments-list.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    MaterialModule,\r\n    SocialRoutingModule,\r\n    SharedModule,\r\n    RecaptchaFormsModule,\r\n    RecaptchaModule\r\n  ],\r\n  declarations: [\r\n    UnreadedCommentsComponent,\r\n    SocialComponent,\r\n    CommentsComponent,\r\n    CommentComponent,\r\n    CommentsListComponent,\r\n  ],\r\n  exports: [\r\n    CommentsComponent,\r\n    CommentsListComponent,\r\n  ]\r\n})\r\nexport class SocialModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc29jaWFsL3VucmVhZGVkLWNvbW1lbnRzL3VucmVhZGVkLWNvbW1lbnRzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport { IUser } from 'src/app/interfaces/user-interface';\r\nimport { NgUserManService } from 'ng-user-man';\r\nimport { SocialService } from 'src/app/services/social.service';\r\nimport { SharedService } from 'ng-user-man';\r\nimport { mergeMap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-unreaded-comments',\r\n  templateUrl: './unreaded-comments.component.html',\r\n  styleUrls: ['./unreaded-comments.component.scss']\r\n})\r\nexport class UnreadedCommentsComponent implements OnInit, AfterViewInit {\r\n  user: IUser;\r\n  unreadedCommentsParents: any[];\r\n  processedUnreadedCommentsParents = [];\r\n  pageLoaded = false;\r\n\r\n  constructor(\r\n    private ngUserManService: NgUserManService,\r\n    private socialService: SocialService,\r\n    private sharedService: SharedService,\r\n  ) { }\r\n\r\n  ngAfterViewInit() {\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.allowTo('user')) {\r\n      this.socialService.getUnreadedCommentsCategories()\r\n        .subscribe(\r\n          result => {\r\n            this.processedUnreadedCommentsParents = [];\r\n            this.unreadedCommentsParents = [];\r\n            if (result.length) {\r\n              this.unreadedCommentsParents = result;\r\n              this.processedUnreadedCommentsParents.push(result[0]);\r\n            }\r\n            this.pageLoaded = true;\r\n          },\r\n          err => console.log('err', err)\r\n        );\r\n\r\n      this.sharedService.getEventToReloadComments()\r\n        .pipe(mergeMap(() => this.socialService.getUnreadedCommentsCategories()))\r\n        .subscribe(\r\n          result => {\r\n            this.processedUnreadedCommentsParents = [];\r\n            this.unreadedCommentsParents = [];\r\n            if (result.length) {\r\n              this.unreadedCommentsParents = result;\r\n              this.processedUnreadedCommentsParents.push(result[0]);\r\n            }\r\n            this.pageLoaded = true;\r\n          },\r\n          err => console.log('err', err)\r\n        );\r\n    }\r\n  }\r\n\r\n  markCommentsAsReaded() {\r\n    this.ngUserManService.userEditUnsecure({name: 'commentsReadedTill'})\r\n    .subscribe(\r\n      res => {\r\n        this.sharedService.sharingEventToReloadComments();\r\n      },\r\n      err => console.log('err', err)\r\n    );\r\n  }\r\n\r\n  onProcessedUnreadedComments(event) {\r\n\r\n    if (this.processedUnreadedCommentsParents.map((value) => value._id).indexOf(event) > -1) {\r\n      // event value (parent_id) is already in processed array\r\n      for (let i = 0; i < this.unreadedCommentsParents.length; i++) {\r\n        if (this.processedUnreadedCommentsParents.map((val) => val._id).indexOf(this.unreadedCommentsParents[i]._id) === -1) {\r\n          // mapping array of all unproceed _ids and add next unproceed _id to proceed array\r\n          console.log('in', this.processedUnreadedCommentsParents.map((value) => value._id).indexOf(this.unreadedCommentsParents[i]._id));\r\n          this.processedUnreadedCommentsParents.push(this.unreadedCommentsParents[i]);\r\n          break;\r\n        }\r\n      }\r\n    } else {\r\n      // this.processedUnreadedCommentsParents.push(event);\r\n    }\r\n  }\r\n\r\n  allowTo(permitedRole: string): boolean {\r\n    this.user = this.ngUserManService.userCookieExtractor();\r\n    return this.ngUserManService.allowTo(permitedRole);\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}