{"version":3,"sources":["webpack:///./src/app/components/dashboard/dashboard-routing.module.ts","webpack:///./src/app/components/dashboard/dashboard-sidenav/dashboard-sidenav.component.html","webpack:///./src/app/components/dashboard/dashboard-sidenav/dashboard-sidenav.component.scss","webpack:///./src/app/components/dashboard/dashboard-sidenav/dashboard-sidenav.component.ts","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.scss","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/dashboard/dashboard.module.ts","webpack:///./src/app/components/dashboard/product-create/product-create.component.html","webpack:///./src/app/components/dashboard/product-create/product-create.component.scss","webpack:///./src/app/components/dashboard/product-create/product-create.component.ts","webpack:///./src/app/components/dashboard/tools/tools.component.html","webpack:///./src/app/components/dashboard/tools/tools.component.scss","webpack:///./src/app/components/dashboard/tools/tools.component.ts"],"names":[],"mappings":"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","file":"components-dashboard-dashboard-module.js","sourcesContent":["import { Routes, RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { DashboardComponent } from './dashboard.component';\r\nimport { DashboardSidenavComponent } from './dashboard-sidenav/dashboard-sidenav.component';\r\nimport { UserProfileComponent } from '../user/user-profile/user-profile.component';\r\nimport { AuthGuard } from '../../guards/auth.guard';\r\nimport { ProductsComponent } from '../products/products.component';\r\nimport { ToolsComponent } from './tools/tools.component';\r\nimport { UserCreateComponent } from '../user/user-create/user-create.component';\r\nimport { ProductCreateComponent } from './product-create/product-create.component';\r\n\r\nconst dashboardRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DashboardComponent,\r\n    children: [\r\n       {\r\n        path: '',\r\n        component: DashboardSidenavComponent,\r\n        outlet: 'dashboardSidenav',\r\n        canActivate: [AuthGuard],\r\n        data: { auth: 'manager' },\r\n      },\r\n      {\r\n        path: '',\r\n        component: UserProfileComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { auth: 'manager' },\r\n      },\r\n      {\r\n        path: 'tools',\r\n        component: ToolsComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { auth: 'manager' },\r\n      },\r\n      {\r\n        path: 'product-create',\r\n        component: ProductCreateComponent,\r\n      },\r\n      {\r\n        path: 'product-edit/:_id',\r\n        component: ProductCreateComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { auth: 'manager' },\r\n      },\r\n      {\r\n        path: 'product-edit',\r\n        component: ProductCreateComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { auth: 'manager' },\r\n      },\r\n      {\r\n        path: 'dashboard-signup',\r\n        component: UserCreateComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { auth: 'manager' },\r\n      },\r\n      {\r\n        path: 'profile',\r\n        component: UserProfileComponent,\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(\r\n      dashboardRoutes\r\n    )],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class DashboardRoutingModule {}\r\n","module.exports = \"    <!--<mat-toolbar class=\\\"mat-elevation-z2\\\">-->\\r\\n      <mat-toolbar-row *ngFor=\\\"let dashboardSidenavItem of dashboardSidenavItems\\\" class=\\\"sidenav-mat-toolbar-row\\\">\\r\\n        <a [routerLinkActive]=\\\"['primary-light']\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\" mat-button\\r\\n           [routerLink]=\\\"['/dashboard', dashboardSidenavItem._id]\\\">{{dashboardSidenavItem.name}}</a>\\r\\n      </mat-toolbar-row>\\r\\n    <!--</mat-toolbar>-->\\r\\n\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { ICatalog } from '../../../interfaces/catalog-interface';\r\nimport { Router } from '@angular/router';\r\nimport { CatalogService } from '../../../services/catalog.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard-sidenav',\r\n  templateUrl: './dashboard-sidenav.component.html',\r\n  styleUrls: ['./dashboard-sidenav.component.scss']\r\n})\r\nexport class DashboardSidenavComponent implements OnInit {\r\ndashboardSidenavItems: ICatalog;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private catalogService: CatalogService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.catalogService.getChildren('dashboard')\r\n      .subscribe(menuItems => {\r\n        this.dashboardSidenavItems = menuItems.data;\r\n        // console.log('dashboardSidenavItems', this.dashboardSidenavItems);\r\n      });\r\n  }\r\n\r\n}\r\n","module.exports = \"<mat-sidenav-container>\\r\\n  <mat-sidenav  class=\\\"sidenav\\\" #sidenav mode=\\\"side\\\" [opened]=\\\"media.isActive('gt-sm')\\\">\\r\\n    <!--<p><button mat-button (click)=\\\"sidenav.toggle()\\\">Toggle</button></p>-->\\r\\n    <!--<p>-->\\r\\n\\r\\n    <!--<div class=\\\"menu-button\\\" fxShow=\\\"true\\\" fxHide.gt-sm=\\\"true\\\">-->\\r\\n      <!--<button mat-button (click)=\\\"sidenav.toggle()\\\">-->\\r\\n        <!--<mat-icon>arrow_left</mat-icon>-->\\r\\n      <!--</button>-->\\r\\n    <!--</div>-->\\r\\n    <div class=\\\"container-sidenav\\\">\\r\\n      <mat-toolbar class=\\\"mat-elevation-z2\\\">\\r\\n        <mat-toolbar-row fxShow=\\\"true\\\" fxHide.gt-sm=\\\"true\\\" class=\\\"sidenav-mat-toolbar-row\\\">\\r\\n          <a  mat-button (click)=\\\"sidenav.toggle()\\\"><mat-icon>arrow_left</mat-icon></a>\\r\\n        </mat-toolbar-row>\\r\\n        <router-outlet name=\\\"dashboardSidenav\\\"></router-outlet>\\r\\n      </mat-toolbar>\\r\\n    </div>\\r\\n      <!--<mat-radio-group class=\\\"example-radio-group\\\" [formControl]=\\\"mode\\\">-->\\r\\n        <!--<label>Mode:</label>-->\\r\\n        <!--<mat-radio-button value=\\\"over\\\">Over</mat-radio-button>-->\\r\\n        <!--<mat-radio-button value=\\\"side\\\">Side</mat-radio-button>-->\\r\\n        <!--<mat-radio-button value=\\\"push\\\">Push</mat-radio-button>-->\\r\\n      <!--</mat-radio-group>-->\\r\\n    <!--</p>-->\\r\\n  </mat-sidenav>\\r\\n\\r\\n  <mat-sidenav-content>\\r\\n\\r\\n    <!--<p><button mat-button (click)=\\\"sidenav.toggle()\\\" >Меню</button></p>-->\\r\\n    <!--<p>-->\\r\\n\\r\\n    <!--*ngIf=\\\"!sidenav.opened\\\"-->\\r\\n    <div *ngIf=\\\"!sidenav.opened\\\" class=\\\"menu-button\\\" fxShow=\\\"true\\\" fxHide.gt-sm=\\\"true\\\">\\r\\n    <button mat-button (click)=\\\"sidenav.toggle()\\\">\\r\\n      <mat-icon>arrow_right</mat-icon>\\r\\n    </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"container\\\">\\r\\n      <router-outlet></router-outlet>\\r\\n    </div>\\r\\n      <!--<mat-radio-group class=\\\"example-radio-group\\\" [formControl]=\\\"mode\\\">-->\\r\\n        <!--<label>Mode:</label>-->\\r\\n        <!--<mat-radio-button value=\\\"over\\\">Over</mat-radio-button>-->\\r\\n        <!--<mat-radio-button value=\\\"side\\\">Side</mat-radio-button>-->\\r\\n        <!--<mat-radio-button value=\\\"push\\\">Push</mat-radio-button>-->\\r\\n      <!--</mat-radio-group>-->\\r\\n    <!--</p>-->\\r\\n\\r\\n  </mat-sidenav-content>\\r\\n</mat-sidenav-container>\\r\\n\"","module.exports = \"\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MediaChange, ObservableMedia } from '@angular/flex-layout';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  public state = '';\r\n\r\n  constructor(public media: ObservableMedia) { }\r\n\r\n  ngOnInit() {\r\n    // this.media.asObservable()\r\n    //   .subscribe((change: MediaChange) => {\r\n    //     this.state = change ? `'${change.mqAlias}' = (${change.mediaQuery})` : '';\r\n    //   });\r\n  }\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DashboardRoutingModule } from './dashboard-routing.module';\r\nimport { DashboardComponent } from './dashboard.component';\r\nimport { MaterialModule } from '../../material.module';\r\nimport { DashboardSidenavComponent } from './dashboard-sidenav/dashboard-sidenav.component';\r\nimport { UserModule } from '../user/user.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { ToolsComponent } from './tools/tools.component';\r\nimport { ProductCreateComponent } from './product-create/product-create.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    MaterialModule,\r\n    DashboardRoutingModule,\r\n    UserModule,\r\n    // CloudinaryModule,\r\n    SharedModule,\r\n  ],\r\n  declarations: [\r\n    DashboardComponent,\r\n    DashboardSidenavComponent,\r\n    ToolsComponent,\r\n    ProductCreateComponent\r\n  ]\r\n})\r\nexport class DashboardModule { }\r\n","module.exports = \"<div class=\\\"row\\\" fxLayout=\\\"row\\\">\\r\\n  <div class=\\\"cell\\\" fxFlex=\\\"100\\\">\\r\\n    <div class=\\\"item full-width-container\\\">\\r\\n      <mat-card  class=\\\"form-block\\\">\\r\\n        <mat-card-header></mat-card-header>\\r\\n        <mat-card-title></mat-card-title>\\r\\n\\r\\n        <mat-card-content>\\r\\n          <div class=\\\"container\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"cell\\\">\\r\\n                <h2 class=\\\"mat-h2\\\">Новий виріб</h2>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          <form [formGroup]=\\\"productCreateForm\\\" #f=\\\"ngForm\\\" (submit)=\\\"onProductCreateSubmit()\\\">\\r\\n\\r\\n            <div class=\\\"row\\\" fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\">\\r\\n              <div class=\\\"cell\\\">\\r\\n                <button type=\\\"button\\\" mat-raised-button (click)=\\\"addCategory()\\\">Додати категорію</button>\\r\\n\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"row\\\" fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\">\\r\\n\\r\\n                <div formArrayName=\\\"parents\\\" class=\\\"cell\\\" fxFlex.gt-xs=\\\"50\\\"\\r\\n                     *ngFor=\\\"let categoryBlock of productCreateForm.get('parents')['controls']; let i = index\\\">\\r\\n                  <!--<div [formGroupName]=\\\"i\\\">-->\\r\\n                    <mat-form-field>\\r\\n                      <mat-select placeholder=\\\"Категорія\\\" formControlName=\\\"{{i}}\\\" required\\r\\n                                  (selectionChange)=\\\"onSelectCategory($event)\\\">\\r\\n                        <mat-optgroup *ngFor=\\\"let category of categories\\\" [label]=\\\"category.name\\\">\\r\\n                          <mat-option *ngIf=\\\"category.numOfChildren === 0\\\" [value]=\\\"category._id\\\">\\r\\n                            {{ category.name }}\\r\\n                          </mat-option>\\r\\n                          <mat-option *ngFor=\\\"let subCategory of category.children\\\" [value]=\\\"subCategory._id\\\">\\r\\n                            {{ subCategory.name }}\\r\\n                          </mat-option>\\r\\n                        </mat-optgroup>\\r\\n                      </mat-select>\\r\\n                      <mat-hint *ngIf=\\\"i > 0\\\" align=\\\"end\\\" class=\\\"remove-field\\\" (click)=\\\"removeCategory(i)\\\">Видалити категорію</mat-hint>\\r\\n                      <mat-error *ngIf=\\\"productCreateForm.get('parents').at(i).errors?.required &&\\r\\n                        productCreateForm.get('parents').at(i).touched\\\">\\r\\n                        Виберіть категорію\\r\\n                      </mat-error>\\r\\n                    </mat-form-field>\\r\\n                  <!--</div>-->\\r\\n                </div>\\r\\n\\r\\n              <div class=\\\"cell\\\" fxFlex.gt-xs=\\\"50\\\">\\r\\n                  <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Найменування\\\" formControlName=\\\"name\\\" required>\\r\\n                    <mat-error\\r\\n                      *ngIf=\\\"(productCreateForm.get('name').errors?.minlength ||\\r\\n                      productCreateForm.get('name').errors?.maxlength ||\\r\\n                      productCreateForm.get('name').errors?.required) &&\\r\\n                      productCreateForm.get('name').touched\\\">\\r\\n                      Довжина повинна бути від 4 до 30 символів\\r\\n                    </mat-error>\\r\\n                  </mat-form-field>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"cell\\\" fxLayout=\\\"row\\\" fxFlex=\\\"50\\\">\\r\\n\\r\\n              <div class=\\\"item\\\" fxFlex=\\\"30\\\">\\r\\n                <div formGroupName=\\\"dimensions\\\">\\r\\n                  <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Ширина\\\" formControlName=\\\"width\\\">\\r\\n                    <span matSuffix>см</span>\\r\\n                    <mat-error\\r\\n                      *ngIf=\\\"productCreateForm.get('dimensions.width').errors?.maxlength &&\\r\\n                      productCreateForm.get('dimensions').get('width').touched\\\">\\r\\n                      Використовуйте не більше ніж три символа\\r\\n                    </mat-error>\\r\\n                    <mat-error\\r\\n                      *ngIf=\\\"productCreateForm.get('dimensions').get('width').errors?.pattern &&\\r\\n                      productCreateForm.get('dimensions').get('width').touched\\\">\\r\\n                      Використовуйте тількі цифри\\r\\n                    </mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"item\\\" fxFlex=\\\"30\\\">\\r\\n                <div formGroupName=\\\"dimensions\\\">\\r\\n                  <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Висота\\\" formControlName=\\\"height\\\">\\r\\n                    <span matSuffix>см</span>\\r\\n                    <mat-error\\r\\n                      *ngIf=\\\"productCreateForm.get('dimensions.height').errors?.maxlength &&\\r\\n                      productCreateForm.get('dimensions').get('height').touched\\\">\\r\\n                      Використовуйте не більше ніж три символа\\r\\n                    </mat-error>\\r\\n                    <mat-error\\r\\n                      *ngIf=\\\"productCreateForm.get('dimensions').get('height').errors?.pattern &&\\r\\n                      productCreateForm.get('dimensions').get('height').touched\\\">\\r\\n                      Використовуйте тількі цифри\\r\\n                    </mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n              </div>\\r\\n                <div class=\\\"item\\\" fxFlex=\\\"40\\\">\\r\\n                  <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Артикул\\\" formControlName=\\\"_id\\\" required>\\r\\n                    <mat-error\\r\\n                      *ngIf=\\\"(productCreateForm.get('_id').errors?.minlength ||\\r\\n                        productCreateForm.get('_id').errors?.maxlength ||\\r\\n                        productCreateForm.get('_id').errors?.required) &&\\r\\n                        productCreateForm.get('_id').touched\\\">\\r\\n                      Довжина повинна бути 6 символів\\r\\n                    </mat-error>\\r\\n                    <mat-error\\r\\n                      *ngIf=\\\"productCreateForm.get('_id').errors?.pattern &&\\r\\n                      productCreateForm.get('_id').touched\\\">\\r\\n                      Використовуйте тількі цифри і букви\\r\\n                    </mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n              <div class=\\\"cell\\\" fxLayout=\\\"row\\\" fxFlex=\\\"50\\\">\\r\\n\\r\\n                <div class=\\\"item \\\" fxFlex=\\\"30\\\">\\r\\n                  <!--{{productCreateForm.get('price').errors | json}}-->\\r\\n                  <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Ціна\\\" formControlName=\\\"price\\\" >\\r\\n                    <span matSuffix>грн</span>\\r\\n                    <mat-error\\r\\n                      *ngIf=\\\"productCreateForm.get('price').errors?.pattern &&\\r\\n                      productCreateForm.get('price').touched\\\">\\r\\n                      Використовуйте тількі цифри більші 0\\r\\n                    </mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"item\\\" fxFlex=\\\"30\\\">\\r\\n                  <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Знижка\\\" formControlName=\\\"discount\\\" >\\r\\n                    <span matSuffix>%</span>\\r\\n                    <mat-error\\r\\n                      *ngIf=\\\"productCreateForm.get('discount').errors?.pattern &&\\r\\n                      productCreateForm.get('discount').touched\\\">\\r\\n                      Використовуйте тількі цифри більші 0\\r\\n                    </mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"item\\\" fxFlex=\\\"40\\\">\\r\\n                  <div class=\\\"flex-left-container\\\">\\r\\n                    <mat-checkbox class=\\\"flex-left-item\\\" formControlName=\\\"onMainPage\\\">На головній</mat-checkbox>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"cell\\\" fxFlex.gt-xs=\\\"50\\\">\\r\\n                <mat-form-field>\\r\\n                  <textarea matInput placeholder=\\\"Опис\\\" formControlName=\\\"description\\\" required></textarea>\\r\\n                  <mat-error\\r\\n                    *ngIf=\\\"(productCreateForm.get('description').errors?.minlength ||\\r\\n                      productCreateForm.get('description').errors?.maxlength ||\\r\\n                      productCreateForm.get('description').errors?.required) &&\\r\\n                      productCreateForm.get('description').touched\\\">\\r\\n                    Довжина повинна бути від 4 до 200 символів\\r\\n                  </mat-error>\\r\\n                  <mat-error\\r\\n                    *ngIf=\\\"productCreateForm.get('description').errors?.pattern &&\\r\\n                      productCreateForm.get('description').touched\\\">\\r\\n                    Використовуйте тількі цифри і букви\\r\\n                  </mat-error>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row\\\" fxLayout=\\\"row\\\" fxFlex=\\\"100\\\">\\r\\n                <div formArrayName=\\\"assets\\\" class=\\\"cell\\\" fxFlex=\\\"25\\\" fxFlex.lt-md=\\\"50\\\"\\r\\n                     *ngFor=\\\"let fileBlock of productCreateForm.get('assets')['controls']; let i = index\\\">\\r\\n                  <div class=\\\"preview-img-wrapper\\\">\\r\\n\\r\\n                      <img *ngIf=\\\"processingLoadFile !== i class=\\\"responsive-image\\\" src=\\\"{{\\r\\n                        config.imgPath +\\r\\n                        config.cloudinary.cloud_name +\\r\\n                        '/c_fill,w_180,h_180,f_auto/' +\\r\\n                        productCreateForm.get('assets').value[i] || defaultProductImgPath}}\\\"\\r\\n                                 alt=\\\"designImage\\\">\\r\\n\\r\\n                    <!--<img *ngIf=\\\"processingLoadFile !== i\\\" src=\\\"{{'https://res.cloudinary.com/hmm6pjfgk/image/upload/' +-->\\r\\n                    <!--productCreateForm.get('assets').value[i]}}\\\" alt=\\\"productImage\\\">-->\\r\\n                    <img *ngIf=\\\"processingLoadFile === i\\\" src=\\\"{{productCreateForm.get('assets').value[i]}}\\\" alt=\\\"productImage\\\">\\r\\n                    <div *ngIf=\\\"processingLoadFile === i\\\" class=\\\"preview-div-processing\\\">\\r\\n                      <div class=\\\"spinner-wrapper\\\">\\r\\n                        <mat-spinner [diameter]=\\\"24\\\"></mat-spinner>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <p *ngIf=\\\"processingLoadFile !== i\\\" class=\\\"remove-field text-center\\\" (click)=\\\"removeFile(i)\\\">\\r\\n                    Видалити зображення</p>\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"cell\\\" fxFlex=\\\"25\\\" fxFlex.lt-md=\\\"50\\\"\\r\\n                     *ngIf=\\\"productCreateForm.get('assets').value.length < 4\\\">\\r\\n                  <div class=\\\"preview-img-wrapper\\\">\\r\\n                    <img src=\\\"{{config.imgPath +\\r\\n                      config.cloudinary.cloud_name + '/c_fill,w_180,h_180,f_auto/' + config.defaultProductImg}}\\\" alt=\\\"productImage\\\">\\r\\n                    <input #inputFile type=\\\"file\\\" (change)=\\\"addPictures($event)\\\"\\r\\n                           accept=\\\".jpg, .jpe, .jpeg, .bmp, .webp, .png\\\" style=\\\"display:none;\\\">\\r\\n\\r\\n                    <div class=\\\"preview-div-processing\\\">\\r\\n                      <div class=\\\"button-wrapper\\\">\\r\\n                        <button mat-mini-fab color=\\\"primary\\\" type=\\\"button\\\"\\r\\n                                (click)=\\\"inputFile.click();\\r\\n                                this.productCreateForm.get('_id').disable();\\r\\n                                this.productCreateForm.get('parents').at(0).disable();\\\"\\r\\n                                [disabled]=\\\"!productCreateForm.get('_id').disabled &&\\r\\n                                !productCreateForm.get('_id').valid || processingLoadFile >= 0\\\">\\r\\n                          <mat-icon>add</mat-icon>\\r\\n                        </button>\\r\\n\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"submit-button-wrapper\\\">\\r\\n              <!--<span fxFlex></span>-->\\r\\n              <button *ngIf=\\\"!editMode\\\" mat-raised-button class=\\\"full-width\\\" color=\\\"primary\\\"\\r\\n                      [disabled]=\\\"!productCreateForm.valid || processingLoadFile >= 0\\\">Створити</button>\\r\\n              <button *ngIf=\\\"editMode\\\" mat-raised-button class=\\\"full-width\\\" color=\\\"primary\\\"\\r\\n                      [disabled]=\\\"!productCreateForm.valid || processingLoadFile >= 0\\\">Зберегти</button>\\r\\n            </div>\\r\\n\\r\\n          </form>\\r\\n          </div>\\r\\n\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\"","\r\nimport {forkJoin as observableForkJoin,  Observable } from 'rxjs';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormArray, FormControl, FormGroup, FormGroupDirective, Validators } from '@angular/forms';\r\nimport { CatalogService } from '../../../services/catalog.service';\r\nimport { ICatalog } from '../../../interfaces/catalog-interface';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { IProduct } from '../../../interfaces/product-interface';\r\nimport { ProductService } from '../../../services/product.service';\r\n\r\nimport { ValidateService } from '../../../services/validate.service';\r\nimport { config } from '../../../app.config';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-product-create',\r\n  templateUrl: './product-create.component.html',\r\n  styleUrls: ['./product-create.component.scss']\r\n})\r\nexport class ProductCreateComponent implements OnInit {\r\n  config = config;\r\n  productCreateForm: FormGroup;\r\n  product: IProduct;\r\n  categories: any;\r\n  processingLoadFile = -1;\r\n  editMode = false;\r\n  edited_id: string;\r\n  /**\r\n   * directive for reset form (invalid status)\r\n   */\r\n  @ViewChild('f') productCreateFormDirective: FormGroupDirective;\r\n\r\n  constructor(\r\n    private catalogService: CatalogService,\r\n    private productService: ProductService,\r\n    private matSnackBar: MatSnackBar,\r\n    private route: ActivatedRoute,\r\n\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.productCreateForm = new FormGroup({\r\n      parents : new FormArray([this.initCategories()]),\r\n      name: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(4),\r\n        Validators.maxLength(30),\r\n      ]),\r\n      description: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(4),\r\n        Validators.maxLength(150),\r\n        Validators.pattern('[a-zA-Z0-9а-яА-ЯіїєІЇЄ,.\"@%-_\\' ]+'),\r\n      ]),\r\n      dimensions: new FormGroup({\r\n        width: new FormControl('', [\r\n          Validators.pattern('[0-9]+'),\r\n          Validators.maxLength(3),\r\n        ]),\r\n        height: new FormControl('', [\r\n          Validators.pattern('[0-9]+'),\r\n          Validators.maxLength(3),\r\n        ]),\r\n      }),\r\n      _id: new FormControl({value: '', disabled: false}, [\r\n        Validators.pattern('[a-zA-Z0-9а-яА-ЯіїєІЇЄ]+'),\r\n        Validators.minLength(6),\r\n        Validators.maxLength(6),\r\n      ]),\r\n      price: new FormControl('', [\r\n        Validators.pattern('^\\\\d*\\\\.?\\\\d+$'),\r\n      ]),\r\n      discount: new FormControl('', [\r\n        Validators.pattern('^\\\\d*\\\\.?\\\\d+$'),\r\n      ]),\r\n      assets: new FormArray([]),\r\n      onMainPage: new FormControl('', [\r\n        // Validators.required,\r\n      ]),\r\n    });\r\n\r\n    this.catalogService.getAllDescendants('products', 0)\r\n      .subscribe(categories => {\r\n        this.categories = categories.data;\r\n      },\r\n        err => this.matSnackBar.open(err.error, '',\r\n          {duration: 3000, panelClass: 'snack-bar-danger'})\r\n      );\r\n\r\n    this.route.paramMap\r\n      .subscribe(paramMap => {\r\n        if (paramMap.get('_id')) {\r\n          console.log('product editor(create) _id', paramMap.get('_id'));\r\n          this.edited_id = paramMap.get('_id');\r\n          this.editMode = true;\r\n\r\n          this.productService.getProductById(this.edited_id, null)\r\n            .subscribe(product => {\r\n\r\n              for (let i = 1; i < product.data.categories.length; i++) {\r\n                this.addCategory();\r\n              }\r\n\r\n              for (let i = 0; i < product.data.files.length; i++) {\r\n                this.addFile();\r\n              }\r\n\r\n              this.productCreateForm.patchValue(product.data);\r\n\r\n          },\r\n            err => console.log('Помилка завантаження товару для редагування', err)\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  resetForm() {\r\n    if (this.productCreateFormDirective) {\r\n\r\n      // enabling disabled fields\r\n      this.productCreateForm.get('sku').enable();\r\n      this.productCreateForm.get('categories')['controls'][0].enable();\r\n\r\n      // deleting needless controls\r\n      // categories controls array has one item on init\r\n      for (let i = this.productCreateForm.get('categories')['controls'].length; i > 1 ; i--) {\r\n        this.removeCategory(i - 1);\r\n      }\r\n      // files controls array don't has elems on init\r\n      for (let i = this.productCreateForm.get('files')['controls'].length; i > 0 ; i--) {\r\n        this.removeFile(i - 1);\r\n      }\r\n      this.productCreateFormDirective.resetForm();\r\n    }\r\n  }\r\n\r\n  addPictures(event) {\r\n      this.processingLoadFile = this.productCreateForm.get('files').value.length;\r\n      const file = event.target.files[0];\r\n      const checkFile = this.productService.checkFile(file);\r\n\r\n\r\n      if (!checkFile.success) {\r\n        this.matSnackBar.open(checkFile.message || 'Помилка', '',\r\n          {duration: 3000, panelClass: 'snack-bar-danger'});\r\n        this.processingLoadFile = -1;\r\n      } else {\r\n        const filesLinks = this.productCreateForm.get('files').value;\r\n        filesLinks.push(config.imgPath + config.cloudinary + config.defaultProductImg);\r\n        this.addFile();\r\n        this.productCreateForm.get('files').setValue(filesLinks);\r\n        this.productService.productAddImage(file, this.productCreateForm.get('sku').value)\r\n          .subscribe(result => {\r\n              // this.previewProductImages.pop();\r\n              filesLinks.pop();\r\n              filesLinks.push(result.data);\r\n              this.productCreateForm.get('files').setValue(filesLinks);\r\n              console.log('this.productCreateForm.get(\\'files\\').value', this.productCreateForm.get('files').value);\r\n              // this.previewProductImages = filesLinks;\r\n              // console.log('this.previewProductImages', this.previewProductImages);\r\n              console.log(result);\r\n              this.processingLoadFile = -1;\r\n            },\r\n            err => {\r\n              this.matSnackBar.open(err.error || 'Помилка', '',\r\n                {duration: 3000, panelClass: 'snack-bar-danger'});\r\n              this.removeFile(this.productCreateForm.get('files').value.length - 1);\r\n              // this.previewProductImages.pop();\r\n              filesLinks.pop();\r\n              this.processingLoadFile = -1;\r\n\r\n            }\r\n          );\r\n      }\r\n  }\r\n\r\n  onProductCreateSubmit() {\r\n    // remove duplicates\r\n    const uniqueCategories = [];\r\n    this.productCreateForm.getRawValue().categories\r\n      .forEach((item) => {\r\n        if (uniqueCategories.indexOf(item) === -1) {\r\n          uniqueCategories.push(item);\r\n        }\r\n    });\r\n\r\n    this.product = <IProduct>{\r\n      parents: uniqueCategories,\r\n      _id: this.productCreateForm.getRawValue().sku, // raw because may be disabled\r\n      name: this.productCreateForm.get('name').value,\r\n      price: this.productCreateForm.get('price').value,\r\n      discount: this.productCreateForm.get('discount').value,\r\n      assets : this.productCreateForm.get('files').value,\r\n      description : this.productCreateForm.get('description').value,\r\n      onMainPage: this.productCreateForm.get('onMainPage').value || false,\r\n      dimensions: {\r\n        width: this.productCreateForm.get('dimensions.width').value,\r\n        height: this.productCreateForm.get('dimensions.height').value,\r\n      }\r\n    };\r\n\r\n    if (this.editMode) {\r\n      // edit\r\n      this.product._id = this.edited_id;\r\n      this.productService.productEdit(this.product)\r\n        .subscribe(result => {\r\n            this.matSnackBar.open(result.message, '',\r\n              {duration: 3000});\r\n            this.resetForm();\r\n            this.editMode = false;\r\n          },\r\n          err => this.matSnackBar.open(err.error, '',\r\n            {duration: 3000, panelClass: 'snack-bar-danger'})\r\n        );\r\n\r\n    } else {\r\n      this.productService.productCreate(this.product)\r\n        .subscribe(result => {\r\n            this.matSnackBar.open(result.message, '',\r\n              {duration: 3000});\r\n            this.resetForm();\r\n          },\r\n          err => this.matSnackBar.open(err.error, '',\r\n            {duration: 3000, panelClass: 'snack-bar-danger'})\r\n        );\r\n    }\r\n\r\n  }\r\n\r\n  onSelectCategory(event) {\r\n    if (event.source.ngControl.name === '0') {\r\n      this.createSku(event.value);\r\n    }\r\n  }\r\n\r\n  createSku(category) {\r\n\r\n    const getPrefix$ = this.catalogService.getPrefix(category);\r\n    const getSkuList$ = this.productService.getSkuList(category);\r\n\r\n    observableForkJoin(getPrefix$, getSkuList$).subscribe(result => {\r\n      const prefix = result[0].data.prefix;\r\n      const skuList = result[1].data\r\n        .map(item => item.sku) // create [] from {}\r\n        .filter(item => item.slice(0, 2) === prefix) // take elems with needed prefix\r\n        .map(item => +item.slice(2)); // concat prefix, take only numbers\r\n\r\n        console.log('skuList', skuList);\r\n        let freeNumber = 1;\r\n        for (let i = 0; i < skuList.length; i++) {\r\n          if (skuList[i] - (i + 1) >= 1) {\r\n            freeNumber = i + 1;\r\n            break;\r\n          }\r\n          if (i === skuList.length - 1) {\r\n            freeNumber = skuList.length + 1;\r\n          }\r\n        }\r\n        let sku = freeNumber.toString();\r\n        while (sku.length < 4) {\r\n          sku = '0' + sku;\r\n        }\r\n        sku = prefix + sku;\r\n        this.productCreateForm.patchValue({sku});\r\n    },\r\n          err => this.matSnackBar.open(err.error, '',\r\n            {duration: 3000, panelClass: 'snack-bar-danger'})\r\n      );\r\n  }\r\n\r\n  addCategory() {\r\n    const control = <FormArray>this.productCreateForm.get('categories');\r\n    control.push(this.initCategories());\r\n  }\r\n\r\n  removeCategory(i: number) {\r\n    const control = <FormArray>this.productCreateForm.get('categories');\r\n    control.removeAt(i);\r\n  }\r\n\r\n  initCategories() {\r\n    return new FormControl('', [\r\n        Validators.required,\r\n      ])\r\n    ;\r\n  }\r\n\r\n  addFile() {\r\n    const control = <FormArray>this.productCreateForm.get('files');\r\n    control.push(this.initFiles());\r\n  }\r\n\r\n  removeFile(i: number) {\r\n    const control = <FormArray>this.productCreateForm.get('files');\r\n    control.removeAt(i);\r\n  }\r\n\r\n  initFiles() {\r\n    return new FormControl('file', [\r\n        // Validators.required,\r\n      ]);\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"row\\\" fxLayout=\\\"row\\\">\\n  <div class=\\\"cell\\\" fxFlex=\\\"100\\\">\\n\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"cell\\\">\\n          <h2 class=\\\"mat-h2\\\">Інструменти</h2>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row\\\" fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\">\\n        <div class=\\\"cell\\\" fxFlex.sm=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" fxLayout=\\\"column\\\" >\\n          <div fxFlex>\\n            <h4 class=\\\"mat-h4\\\">favicon32x32</h4>\\n          </div>\\n          <div fxFlex fxLayoutAlign=\\\"center center\\\">\\n            <img fxflex class=\\\"product-detail-image\\\" src=\\\"{{\\n                config.imgPath +\\n                config.cloudinary.cloud_name +\\n                '/c_fill,w_32,h_32/' +\\n                faviconFilename}}\\\"\\n                 alt=\\\"icon\\\">\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row\\\" fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\">\\n\\n        <div class=\\\"cell\\\" fxFlex.sm=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" fxLayout=\\\"column\\\" >\\n          <div fxFlex>\\n            <h4 class=\\\"mat-h4\\\">Grabo Logo 250x90</h4>\\n          </div>\\n          <div fxFlex fxLayoutAlign=\\\"center center\\\">\\n            <img fxflex class=\\\"product-detail-image\\\" src=\\\"{{\\n                config.imgPath +\\n                config.cloudinary.cloud_name +\\n                '/c_fill,w_250,h_90/' +\\n                logoFilename}}\\\"\\n                 alt=\\\"icon\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"cell\\\" fxFlex.sm=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" fxLayout=\\\"column\\\" >\\n          <div fxFlex>\\n            <h4 class=\\\"mat-h4\\\">Grabo Logo 140x50</h4>\\n          </div>\\n          <div fxFlex fxLayoutAlign=\\\"center center\\\">\\n            <img fxflex class=\\\"product-detail-image\\\" src=\\\"{{\\n                config.imgPath +\\n                config.cloudinary.cloud_name +\\n                '/c_fill,w_140,h_50/' +\\n                logoFilename}}\\\"\\n                 alt=\\\"icon\\\">\\n          </div>\\n        </div>\\n\\n      </div>\\n\\n      <div class=\\\"row\\\" fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\">\\n\\n        <div class=\\\"cell\\\" fxFlex.sm=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" fxLayout=\\\"column\\\" >\\n          <div fxFlex>\\n            <h4 class=\\\"mat-h4\\\">512x512</h4>\\n          </div>\\n          <div fxFlex fxLayoutAlign=\\\"center center\\\">\\n            <img fxflex class=\\\"product-detail-image\\\" src=\\\"{{\\n              config.imgPath +\\n              config.cloudinary.cloud_name +\\n              '/c_fill,w_512,h_512/' +\\n              iconFilename}}\\\"\\n                 alt=\\\"icon\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"cell\\\" fxFlex.sm=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" fxLayout=\\\"column\\\" >\\n          <div fxFlex>\\n            <h4 class=\\\"mat-h4\\\">384x384</h4>\\n          </div>\\n          <div fxFlex fxLayoutAlign=\\\"center center\\\">\\n            <img fxflex class=\\\"product-detail-image\\\" src=\\\"{{\\n              config.imgPath +\\n              config.cloudinary.cloud_name +\\n              '/c_fill,w_384,h_384/' +\\n              iconFilename}}\\\"\\n                 alt=\\\"icon\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"cell\\\" fxFlex.sm=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" fxLayout=\\\"column\\\" >\\n          <div fxFlex>\\n            <h4 class=\\\"mat-h4\\\">192x192</h4>\\n          </div>\\n          <div fxFlex fxLayoutAlign=\\\"center center\\\">\\n            <img fxflex class=\\\"product-detail-image\\\" src=\\\"{{\\n              config.imgPath +\\n              config.cloudinary.cloud_name +\\n              '/c_fill,w_192,h_192/' +\\n              iconFilename}}\\\"\\n                 alt=\\\"icon\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"cell\\\" fxFlex.sm=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" fxLayout=\\\"column\\\" >\\n          <div fxFlex>\\n            <h4 class=\\\"mat-h4\\\">152x152</h4>\\n          </div>\\n          <div fxFlex fxLayoutAlign=\\\"center center\\\">\\n            <img fxflex class=\\\"product-detail-image\\\" src=\\\"{{\\n              config.imgPath +\\n              config.cloudinary.cloud_name +\\n              '/c_fill,w_152,h_152/' +\\n              iconFilename}}\\\"\\n                 alt=\\\"icon\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"cell\\\" fxFlex.sm=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" fxLayout=\\\"column\\\" >\\n          <div fxFlex>\\n            <h4 class=\\\"mat-h4\\\">144x144</h4>\\n          </div>\\n          <div fxFlex fxLayoutAlign=\\\"center center\\\">\\n            <img fxflex class=\\\"product-detail-image\\\" src=\\\"{{\\n              config.imgPath +\\n              config.cloudinary.cloud_name +\\n              '/c_fill,w_144,h_144/' +\\n              iconFilename}}\\\"\\n                 alt=\\\"icon\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"cell\\\" fxFlex.sm=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" fxLayout=\\\"column\\\" >\\n          <div fxFlex>\\n            <h4 class=\\\"mat-h4\\\">128x128</h4>\\n          </div>\\n          <div fxFlex fxLayoutAlign=\\\"center center\\\">\\n            <img fxflex class=\\\"product-detail-image\\\" src=\\\"{{\\n              config.imgPath +\\n              config.cloudinary.cloud_name +\\n              '/c_fill,w_128,h_128/' +\\n              iconFilename}}\\\"\\n                 alt=\\\"icon\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"cell\\\" fxFlex.sm=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" fxLayout=\\\"column\\\" >\\n          <div fxFlex>\\n            <h4 class=\\\"mat-h4\\\">96x96</h4>\\n          </div>\\n          <div fxFlex fxLayoutAlign=\\\"center center\\\">\\n            <img fxflex class=\\\"product-detail-image\\\" src=\\\"{{\\n              config.imgPath +\\n              config.cloudinary.cloud_name +\\n              '/c_fill,w_96,h_96/' +\\n              iconFilename}}\\\"\\n                 alt=\\\"icon\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"cell\\\" fxFlex.sm=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" fxLayout=\\\"column\\\" >\\n          <div fxFlex>\\n            <h4 class=\\\"mat-h4\\\">72x72</h4>\\n          </div>\\n          <div fxFlex fxLayoutAlign=\\\"center center\\\">\\n            <img fxflex class=\\\"product-detail-image\\\" src=\\\"{{\\n              config.imgPath +\\n              config.cloudinary.cloud_name +\\n              '/c_fill,w_72,h_72/' +\\n              iconFilename}}\\\"\\n                 alt=\\\"icon\\\">\\n          </div>\\n        </div>\\n\\n\\n\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { config } from '../../../app.config';\n\n@Component({\n  selector: 'app-tools',\n  templateUrl: './tools.component.html',\n  styleUrls: ['./tools.component.scss']\n})\nexport class ToolsComponent implements OnInit {\n  config = config;\n  iconFilename: string;\n  faviconFilename: string;\n  logoFilename: string;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.iconFilename = config.logoLight + '.png';\n    this.faviconFilename = config.logoLight + '.png';\n    this.logoFilename = config.logoLight + '.png';\n  }\n}\n"],"sourceRoot":""}