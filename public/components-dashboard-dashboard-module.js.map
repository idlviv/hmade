{"version":3,"sources":["webpack:///./src/app/components/dashboard/dashboard-routing.module.ts","webpack:///./src/app/components/dashboard/dashboard-sidenav/dashboard-sidenav.component.html","webpack:///./src/app/components/dashboard/dashboard-sidenav/dashboard-sidenav.component.scss","webpack:///./src/app/components/dashboard/dashboard-sidenav/dashboard-sidenav.component.ts","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.scss","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/dashboard/dashboard.module.ts","webpack:///./src/app/components/dashboard/mc-editor-form/mc-editor-form.component.html","webpack:///./src/app/components/dashboard/mc-editor-form/mc-editor-form.component.scss","webpack:///./src/app/components/dashboard/mc-editor-form/mc-editor-form.component.ts","webpack:///./src/app/components/dashboard/mc-editor/mc-editor.component.html","webpack:///./src/app/components/dashboard/mc-editor/mc-editor.component.scss","webpack:///./src/app/components/dashboard/mc-editor/mc-editor.component.ts","webpack:///./src/app/components/dashboard/product-create/product-create.component.html","webpack:///./src/app/components/dashboard/product-create/product-create.component.scss","webpack:///./src/app/components/dashboard/product-create/product-create.component.ts","webpack:///./src/app/components/dashboard/product-editor-form/product-editor-form.component.html","webpack:///./src/app/components/dashboard/product-editor-form/product-editor-form.component.scss","webpack:///./src/app/components/dashboard/product-editor-form/product-editor-form.component.ts","webpack:///./src/app/components/dashboard/product-editor/product-editor.component.html","webpack:///./src/app/components/dashboard/product-editor/product-editor.component.scss","webpack:///./src/app/components/dashboard/product-editor/product-editor.component.ts","webpack:///./src/app/components/dashboard/tools/tools.component.html","webpack:///./src/app/components/dashboard/tools/tools.component.scss","webpack:///./src/app/components/dashboard/tools/tools.component.ts"],"names":[],"mappings":"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","file":"components-dashboard-dashboard-module.js","sourcesContent":["import { Routes, RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { DashboardComponent } from './dashboard.component';\r\nimport { DashboardSidenavComponent } from './dashboard-sidenav/dashboard-sidenav.component';\r\nimport { UserProfileComponent } from '../user/user-profile/user-profile.component';\r\nimport { AuthGuard } from '../../guards/auth.guard';\r\nimport { ProductsComponent } from '../products/products.component';\r\nimport { ToolsComponent } from './tools/tools.component';\r\nimport { UserCreateComponent } from '../user/user-create/user-create.component';\r\nimport { ProductCreateComponent } from './product-create/product-create.component';\r\nimport { ProductEditorComponent } from './product-editor/product-editor.component';\r\nimport { ProductEditorFormComponent } from './product-editor-form/product-editor-form.component';\r\nimport { McEditorComponent } from './mc-editor/mc-editor.component';\r\nimport { McEditorFormComponent } from './mc-editor-form/mc-editor-form.component';\r\n\r\nconst dashboardRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DashboardComponent,\r\n    children: [\r\n       {\r\n        path: '',\r\n        component: DashboardSidenavComponent,\r\n        outlet: 'dashboardSidenav',\r\n        canActivate: [AuthGuard],\r\n        data: { auth: 'manager' },\r\n      },\r\n      {\r\n        path: '',\r\n        component: UserProfileComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { auth: 'manager' },\r\n      },\r\n      {\r\n        path: 'tools',\r\n        component: ToolsComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { auth: 'manager' },\r\n      },\r\n      {\r\n        path: 'product-editor',\r\n        component: ProductEditorComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { auth: 'manager' },\r\n      },\r\n      {\r\n        path: 'product-editor-new/:parentCategory_id/:parentCategoryName',\r\n        component: ProductEditorFormComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { auth: 'manager' },\r\n      },\r\n      {\r\n        path: 'product-editor-edit/:parentCategory_id/:parentCategoryName/:_id',\r\n        component: ProductEditorFormComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { auth: 'manager' },\r\n      },\r\n      {\r\n        path: 'mc-editor',\r\n        component: McEditorComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { auth: 'manager' },\r\n      },\r\n      {\r\n        path: 'mc-editor-new/:parentCategory_id/:parentCategoryName',\r\n        component: McEditorFormComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { auth: 'manager' },\r\n      },\r\n      {\r\n        path: 'mc-editor-edit/:parentCategory_id/:parentCategoryName/:_id',\r\n        component: McEditorFormComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { auth: 'manager' },\r\n      },\r\n\r\n      // {\r\n      //   path: 'product-create',\r\n      //   component: ProductCreateComponent,\r\n      // },\r\n      // {\r\n      //   path: 'product-edit/:_id',\r\n      //   component: ProductCreateComponent,\r\n      //   canActivate: [AuthGuard],\r\n      //   data: { auth: 'manager' },\r\n      // },\r\n      // {\r\n      //   path: 'product-edit',\r\n      //   component: ProductCreateComponent,\r\n      //   canActivate: [AuthGuard],\r\n      //   data: { auth: 'manager' },\r\n      // },\r\n      {\r\n        path: 'dashboard-signup',\r\n        component: UserCreateComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { auth: 'manager' },\r\n      },\r\n      {\r\n        path: 'profile',\r\n        component: UserProfileComponent,\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(\r\n      dashboardRoutes\r\n    )],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class DashboardRoutingModule {}\r\n","module.exports = \"    <!--<mat-toolbar class=\\\"mat-elevation-z2\\\">-->\\r\\n      <mat-toolbar-row *ngFor=\\\"let dashboardSidenavItem of dashboardSidenavItems\\\" class=\\\"sidenav-mat-toolbar-row\\\">\\r\\n        <a [routerLinkActive]=\\\"['primary-light']\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\" mat-button\\r\\n           [routerLink]=\\\"['/dashboard', dashboardSidenavItem._id]\\\">{{dashboardSidenavItem.name}}</a>\\r\\n      </mat-toolbar-row>\\r\\n    <!--</mat-toolbar>-->\\r\\n\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { ICatalog } from '../../../interfaces/catalog-interface';\r\nimport { Router } from '@angular/router';\r\nimport { CatalogService } from '../../../services/catalog.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard-sidenav',\r\n  templateUrl: './dashboard-sidenav.component.html',\r\n  styleUrls: ['./dashboard-sidenav.component.scss']\r\n})\r\nexport class DashboardSidenavComponent implements OnInit {\r\ndashboardSidenavItems: ICatalog;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private catalogService: CatalogService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.catalogService.getChildren('dashboard')\r\n      .subscribe(menuItems => {\r\n        this.dashboardSidenavItems = menuItems.data;\r\n        // console.log('dashboardSidenavItems', this.dashboardSidenavItems);\r\n      });\r\n  }\r\n\r\n}\r\n","module.exports = \"<mat-sidenav-container>\\r\\n  <mat-sidenav  class=\\\"sidenav\\\" #sidenav mode=\\\"side\\\" [opened]=\\\"media.isActive('gt-sm')\\\">\\r\\n    <!--<p><button mat-button (click)=\\\"sidenav.toggle()\\\">Toggle</button></p>-->\\r\\n    <!--<p>-->\\r\\n\\r\\n    <!--<div class=\\\"menu-button\\\" fxShow=\\\"true\\\" fxHide.gt-sm=\\\"true\\\">-->\\r\\n      <!--<button mat-button (click)=\\\"sidenav.toggle()\\\">-->\\r\\n        <!--<mat-icon>arrow_left</mat-icon>-->\\r\\n      <!--</button>-->\\r\\n    <!--</div>-->\\r\\n    <div class=\\\"container-sidenav\\\">\\r\\n      <mat-toolbar class=\\\"mat-elevation-z2\\\">\\r\\n        <mat-toolbar-row fxShow=\\\"true\\\" fxHide.gt-sm=\\\"true\\\" class=\\\"sidenav-mat-toolbar-row\\\">\\r\\n          <a  mat-button (click)=\\\"sidenav.toggle()\\\"><mat-icon>arrow_left</mat-icon></a>\\r\\n        </mat-toolbar-row>\\r\\n        <router-outlet name=\\\"dashboardSidenav\\\"></router-outlet>\\r\\n      </mat-toolbar>\\r\\n    </div>\\r\\n      <!--<mat-radio-group class=\\\"example-radio-group\\\" [formControl]=\\\"mode\\\">-->\\r\\n        <!--<label>Mode:</label>-->\\r\\n        <!--<mat-radio-button value=\\\"over\\\">Over</mat-radio-button>-->\\r\\n        <!--<mat-radio-button value=\\\"side\\\">Side</mat-radio-button>-->\\r\\n        <!--<mat-radio-button value=\\\"push\\\">Push</mat-radio-button>-->\\r\\n      <!--</mat-radio-group>-->\\r\\n    <!--</p>-->\\r\\n  </mat-sidenav>\\r\\n\\r\\n  <mat-sidenav-content>\\r\\n\\r\\n    <!--<p><button mat-button (click)=\\\"sidenav.toggle()\\\" >Меню</button></p>-->\\r\\n    <!--<p>-->\\r\\n\\r\\n    <!--*ngIf=\\\"!sidenav.opened\\\"-->\\r\\n    <div *ngIf=\\\"!sidenav.opened\\\" class=\\\"menu-button\\\" fxShow=\\\"true\\\" fxHide.gt-sm=\\\"true\\\">\\r\\n    <button mat-button (click)=\\\"sidenav.toggle()\\\">\\r\\n      <mat-icon>arrow_right</mat-icon>\\r\\n    </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"container\\\">\\r\\n      <router-outlet></router-outlet>\\r\\n    </div>\\r\\n      <!--<mat-radio-group class=\\\"example-radio-group\\\" [formControl]=\\\"mode\\\">-->\\r\\n        <!--<label>Mode:</label>-->\\r\\n        <!--<mat-radio-button value=\\\"over\\\">Over</mat-radio-button>-->\\r\\n        <!--<mat-radio-button value=\\\"side\\\">Side</mat-radio-button>-->\\r\\n        <!--<mat-radio-button value=\\\"push\\\">Push</mat-radio-button>-->\\r\\n      <!--</mat-radio-group>-->\\r\\n    <!--</p>-->\\r\\n\\r\\n  </mat-sidenav-content>\\r\\n</mat-sidenav-container>\\r\\n\"","module.exports = \"\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MediaChange, ObservableMedia } from '@angular/flex-layout';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  public state = '';\r\n\r\n  constructor(public media: ObservableMedia) { }\r\n\r\n  ngOnInit() {\r\n    // this.media.asObservable()\r\n    //   .subscribe((change: MediaChange) => {\r\n    //     this.state = change ? `'${change.mqAlias}' = (${change.mediaQuery})` : '';\r\n    //   });\r\n  }\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DashboardRoutingModule } from './dashboard-routing.module';\r\nimport { DashboardComponent } from './dashboard.component';\r\nimport { MaterialModule } from '../../material.module';\r\nimport { DashboardSidenavComponent } from './dashboard-sidenav/dashboard-sidenav.component';\r\nimport { UserModule } from '../user/user.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { ToolsComponent } from './tools/tools.component';\r\nimport { ProductCreateComponent } from './product-create/product-create.component';\r\nimport { ProductEditorComponent } from './product-editor/product-editor.component';\r\nimport { ProductEditorFormComponent } from './product-editor-form/product-editor-form.component';\r\nimport { McEditorComponent } from './mc-editor/mc-editor.component';\r\nimport { McEditorFormComponent } from './mc-editor-form/mc-editor-form.component';\r\nimport { McsModule } from '../mcs/mcs.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    MaterialModule,\r\n    DashboardRoutingModule,\r\n    UserModule,\r\n    SharedModule,\r\n    McsModule,\r\n  ],\r\n  declarations: [\r\n    DashboardComponent,\r\n    DashboardSidenavComponent,\r\n    ToolsComponent,\r\n    ProductCreateComponent,\r\n    ProductEditorComponent,\r\n    ProductEditorFormComponent,\r\n    McEditorComponent,\r\n    McEditorFormComponent\r\n  ]\r\n})\r\nexport class DashboardModule { }\r\n","module.exports = \"<p>\\n  mc-editor-form works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-mc-editor-form',\n  templateUrl: './mc-editor-form.component.html',\n  styleUrls: ['./mc-editor-form.component.scss']\n})\nexport class McEditorFormComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"row\\\" fxLayout=\\\"row\\\">\\n  <div class=\\\"cell\\\" fxFlex=\\\"100\\\">\\n\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"cell\\\">\\n          <h2 class=\\\"mat-h2\\\">Редактор виробів</h2>\\n        </div>\\n      </div>\\n      <form [formGroup]=\\\"catalogForm\\\" #f=\\\"ngForm\\\">\\n        <div class=\\\"row\\\" fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\">\\n          <div formArrayName=\\\"parents\\\" class=\\\"cell\\\" fxFlex.sm=\\\"50\\\" fxFlex.md=\\\"33.3\\\" fxFlex.gt-md=\\\"25\\\"\\n               *ngFor=\\\"let categoryBlock of catalogForm.get('parents')['controls']; let i = index\\\">\\n\\n                <mat-select placeholder=\\\"Виберіть категорію\\\" formControlName=\\\"{{i}}\\\" required\\n                            (selectionChange)=\\\"onSelectCategory($event, i)\\\">\\n                  <mat-option *ngFor=\\\"let child of children[i]\\\" [value]=\\\"child._id\\\">\\n                    {{child.name}}\\n                  </mat-option>\\n            </mat-select>\\n          </div>\\n\\n        </div>\\n      </form>\\n\\n      <div *ngIf=\\\"noMoreChildren\\\" class=\\\"row\\\" fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\">\\n        <div class=\\\"cell\\\" fxFlex.sm=\\\"50\\\" fxFlex.md=\\\"33.3\\\" fxFlex.gt-md=\\\"25\\\">\\n          <div class=\\\"preview-img-wrapper\\\">\\n            <img src=\\\"{{\\n                        config.imgPath +\\n                        config.cloudinary.cloud_name +\\n                        '/c_fill,w_180,h_180,f_auto/' +\\n                        config.defaultProductImg}}\\\" alt=\\\"product\\\">\\n            <div class=\\\"preview-div-processing\\\">\\n              <div class=\\\"button-wrapper\\\">\\n                <button mat-mini-fab color=\\\"primary\\\" type=\\\"button\\\"\\n                        [routerLink]=\\\"['/dashboard', 'product-editor-new', parentCategory_id, parentCategoryName]\\\"\\n                        [routerLinkActive]=\\\"['accent-background']\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\">\\n                  <mat-icon>add</mat-icon>\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div *ngFor=\\\"let mc of mcs\\\"  class=\\\"cell\\\" fxFlex.sm=\\\"50\\\" fxFlex.md=\\\"33.3\\\" fxFlex.gt-md=\\\"25\\\">\\n          <app-mcs-item-brief [mc]=\\\"mc\\\" [parentCategory_id]=\\\"parentCategory_id\\\" \\n          [parentCategoryName]=\\\"parentCategoryName\\\"></app-mcs-item-brief>\\n        </div>\\n\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { of } from 'rxjs/index';\nimport { mergeMap } from 'rxjs/operators';\nimport { CatalogService } from '../../../services/catalog.service';\nimport { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ProductService } from '../../../services/product.service';\nimport { config } from '../../../app.config';\nimport { McService } from 'src/app/services/mc.service';\n\n@Component({\n  selector: 'app-mc-editor',\n  templateUrl: './mc-editor.component.html',\n  styleUrls: ['./mc-editor.component.scss']\n})\nexport class McEditorComponent implements OnInit {\n  children = [];\n  catalogForm: FormGroup;\n  mcs: any;\n  parentCategory_id: string;\n  parentCategoryName: string;\n  config = config;\n  noMoreChildren = false;\n\n    constructor(\n    private catalogService: CatalogService,\n    private mcService: McService,\n  ) { }\n\n  ngOnInit() {\n\n    this.catalogForm = new FormGroup({\n      parents : new FormArray([this.initParents()]),\n    });\n\n    this.catalogService.getChildren('products')\n      .subscribe(\n        result => this.children[0] = result.data,\n        err => console.log('помилка завантаження категорій', err)\n      );\n  }\n\n  onSelectCategory(event, level) {\n    while (level + 1 < this.catalogForm.get('parents')['controls'].length) {\n      this.removeParents(this.catalogForm.get('parents')['controls'].length - 1);\n    }\n\n    this.catalogService.getChildren(event.value).pipe(\n      mergeMap(children => {\n        if (!children.data.length) {\n          // if no children - show products\n          this.parentCategory_id = event.value;\n          this.parentCategoryName = event.source.triggerValue;\n          this.noMoreChildren = true;\n          this.children[level + 1] = children.data;\n          return this.mcService.getMcsByParent(event.value, 'products', false);\n       } else {\n          this.children[level + 1] = children.data;\n          this.noMoreChildren = false;\n          this.addParents();\n          return this.mcService.getMcsByParent(null, 'products', true);\n        }\n      })\n    )\n    .subscribe(res => {\n      this.mcs = res.data;\n    },\n      err => console.log('помилка завантаження категорій', err)\n    );\n  }\n\n  addParents() {\n    const control = <FormArray>this.catalogForm.get('parents');\n    control.push(this.initParents());\n  }\n\n  removeParents(i: number) {\n    const control = <FormArray>this.catalogForm.get('parents');\n    control.removeAt(i);\n  }\n\n  initParents() {\n    return new FormControl('', [\n      Validators.required,\n    ]);\n  }\n}\n\n\n","module.exports = \"<div class=\\\"row\\\" fxLayout=\\\"row\\\">\\r\\n  <div class=\\\"cell\\\" fxFlex=\\\"100\\\">\\r\\n    <div class=\\\"item full-width-container\\\">\\r\\n      <mat-card  class=\\\"form-block\\\">\\r\\n        <mat-card-header></mat-card-header>\\r\\n        <mat-card-title></mat-card-title>\\r\\n\\r\\n        <mat-card-content>\\r\\n          <div class=\\\"container\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"cell\\\">\\r\\n                <h2 class=\\\"mat-h2\\\">Новий виріб</h2>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          <form [formGroup]=\\\"productCreateForm\\\" #f=\\\"ngForm\\\" (submit)=\\\"onProductCreateSubmit()\\\">\\r\\n\\r\\n            <div class=\\\"row\\\" fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\">\\r\\n              <div class=\\\"cell\\\">\\r\\n                <button type=\\\"button\\\" mat-raised-button (click)=\\\"addCategory()\\\">Додати категорію</button>\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"row\\\" fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\">\\r\\n\\r\\n                <div formArrayName=\\\"parents\\\" class=\\\"cell\\\" fxFlex.gt-xs=\\\"50\\\"\\r\\n                     *ngFor=\\\"let categoryBlock of productCreateForm.get('parents')['controls']; let i = index\\\">\\r\\n                  <!--<div [formGroupName]=\\\"i\\\">-->\\r\\n                    <mat-form-field>\\r\\n                      <mat-select placeholder=\\\"Категорія\\\" formControlName=\\\"{{i}}\\\" required\\r\\n                                  (selectionChange)=\\\"onSelectParents($event)\\\">\\r\\n                        <mat-optgroup *ngFor=\\\"let category of categories\\\" [label]=\\\"category.name\\\">\\r\\n                          <mat-option *ngIf=\\\"category.numOfChildren === 0\\\" [value]=\\\"category._id\\\">\\r\\n                            {{ category.name }}\\r\\n                          </mat-option>\\r\\n                          <mat-option *ngFor=\\\"let subCategory of category.children\\\" [value]=\\\"subCategory._id\\\">\\r\\n                            {{ subCategory.name }}\\r\\n                          </mat-option>\\r\\n                        </mat-optgroup>\\r\\n                      </mat-select>\\r\\n                      <mat-hint *ngIf=\\\"i > 0\\\" align=\\\"end\\\" class=\\\"remove-field\\\" (click)=\\\"removeCategory(i)\\\">Видалити категорію</mat-hint>\\r\\n                      <mat-error *ngIf=\\\"productCreateForm.get('parents').at(i).errors?.required &&\\r\\n                        productCreateForm.get('parents').at(i).touched\\\">\\r\\n                        Виберіть категорію\\r\\n                      </mat-error>\\r\\n                    </mat-form-field>\\r\\n                  <!--</div>-->\\r\\n                </div>\\r\\n\\r\\n              <div class=\\\"cell\\\" fxFlex.gt-xs=\\\"50\\\">\\r\\n                  <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Найменування\\\" formControlName=\\\"name\\\" required>\\r\\n                    <mat-error\\r\\n                      *ngIf=\\\"(productCreateForm.get('name').errors?.minlength ||\\r\\n                      productCreateForm.get('name').errors?.maxlength ||\\r\\n                      productCreateForm.get('name').errors?.required) &&\\r\\n                      productCreateForm.get('name').touched\\\">\\r\\n                      Довжина повинна бути від 4 до 30 символів\\r\\n                    </mat-error>\\r\\n                  </mat-form-field>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"cell\\\" fxLayout=\\\"row\\\" fxFlex=\\\"50\\\">\\r\\n\\r\\n              <div class=\\\"item\\\" fxFlex=\\\"30\\\">\\r\\n                <div formGroupName=\\\"dimensions\\\">\\r\\n                  <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Ширина\\\" formControlName=\\\"width\\\">\\r\\n                    <span matSuffix>см</span>\\r\\n                    <mat-error\\r\\n                      *ngIf=\\\"productCreateForm.get('dimensions.width').errors?.maxlength &&\\r\\n                      productCreateForm.get('dimensions').get('width').touched\\\">\\r\\n                      Використовуйте не більше ніж три символа\\r\\n                    </mat-error>\\r\\n                    <mat-error\\r\\n                      *ngIf=\\\"productCreateForm.get('dimensions').get('width').errors?.pattern &&\\r\\n                      productCreateForm.get('dimensions').get('width').touched\\\">\\r\\n                      Використовуйте тількі цифри\\r\\n                    </mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"item\\\" fxFlex=\\\"30\\\">\\r\\n                <div formGroupName=\\\"dimensions\\\">\\r\\n                  <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Висота\\\" formControlName=\\\"height\\\">\\r\\n                    <span matSuffix>см</span>\\r\\n                    <mat-error\\r\\n                      *ngIf=\\\"productCreateForm.get('dimensions.height').errors?.maxlength &&\\r\\n                      productCreateForm.get('dimensions').get('height').touched\\\">\\r\\n                      Використовуйте не більше ніж три символа\\r\\n                    </mat-error>\\r\\n                    <mat-error\\r\\n                      *ngIf=\\\"productCreateForm.get('dimensions').get('height').errors?.pattern &&\\r\\n                      productCreateForm.get('dimensions').get('height').touched\\\">\\r\\n                      Використовуйте тількі цифри\\r\\n                    </mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n              </div>\\r\\n                <div class=\\\"item\\\" fxFlex=\\\"40\\\">\\r\\n                  <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Артикул\\\" formControlName=\\\"_id\\\" required>\\r\\n                    <mat-error\\r\\n                      *ngIf=\\\"(productCreateForm.get('_id').errors?.minlength ||\\r\\n                        productCreateForm.get('_id').errors?.maxlength ||\\r\\n                        productCreateForm.get('_id').errors?.required) &&\\r\\n                        productCreateForm.get('_id').touched\\\">\\r\\n                      Довжина повинна бути 6 символів\\r\\n                    </mat-error>\\r\\n                    <mat-error\\r\\n                      *ngIf=\\\"productCreateForm.get('_id').errors?.pattern &&\\r\\n                      productCreateForm.get('_id').touched\\\">\\r\\n                      Використовуйте тількі цифри і букви\\r\\n                    </mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n              <div class=\\\"cell\\\" fxLayout=\\\"row\\\" fxFlex=\\\"50\\\">\\r\\n\\r\\n                <div class=\\\"item \\\" fxFlex=\\\"30\\\">\\r\\n                  <!--{{productCreateForm.get('price').errors | json}}-->\\r\\n                  <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Ціна\\\" formControlName=\\\"price\\\" >\\r\\n                    <span matSuffix>грн</span>\\r\\n                    <mat-error\\r\\n                      *ngIf=\\\"productCreateForm.get('price').errors?.pattern &&\\r\\n                      productCreateForm.get('price').touched\\\">\\r\\n                      Використовуйте тількі цифри більші 0\\r\\n                    </mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"item\\\" fxFlex=\\\"30\\\">\\r\\n                  <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Знижка\\\" formControlName=\\\"discount\\\" >\\r\\n                    <span matSuffix>%</span>\\r\\n                    <mat-error\\r\\n                      *ngIf=\\\"productCreateForm.get('discount').errors?.pattern &&\\r\\n                      productCreateForm.get('discount').touched\\\">\\r\\n                      Знижка може бути від 0% до 99%\\r\\n                    </mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"item\\\" fxFlex=\\\"40\\\">\\r\\n                  <div class=\\\"flex-left-container\\\">\\r\\n                    <mat-checkbox class=\\\"flex-left-item\\\" formControlName=\\\"onMainPage\\\">На головній</mat-checkbox>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"cell\\\" fxFlex.gt-xs=\\\"50\\\">\\r\\n                <mat-form-field>\\r\\n                  <textarea matInput placeholder=\\\"Опис\\\" formControlName=\\\"description\\\" required></textarea>\\r\\n                  <mat-error\\r\\n                    *ngIf=\\\"(productCreateForm.get('description').errors?.minlength ||\\r\\n                      productCreateForm.get('description').errors?.maxlength ||\\r\\n                      productCreateForm.get('description').errors?.required) &&\\r\\n                      productCreateForm.get('description').touched\\\">\\r\\n                    Довжина повинна бути від 4 до 200 символів\\r\\n                  </mat-error>\\r\\n                  <mat-error\\r\\n                    *ngIf=\\\"productCreateForm.get('description').errors?.pattern &&\\r\\n                      productCreateForm.get('description').touched\\\">\\r\\n                    Використовуйте тількі цифри і букви\\r\\n                  </mat-error>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row\\\" fxLayout=\\\"row\\\" fxFlex=\\\"100\\\">\\r\\n                <div formArrayName=\\\"assets\\\" class=\\\"cell\\\" fxFlex=\\\"25\\\" fxFlex.lt-md=\\\"50\\\"\\r\\n                     *ngFor=\\\"let fileBlock of productCreateForm.get('assets')['controls']; let i = index\\\">\\r\\n                  <div class=\\\"preview-img-wrapper\\\">\\r\\n\\r\\n                      <img *ngIf=\\\"processingLoadFile !== i class=\\\"responsive-image\\\" src=\\\"{{\\r\\n                        config.imgPath +\\r\\n                        config.cloudinary.cloud_name +\\r\\n                        '/c_fill,w_180,h_180,f_auto/' +\\r\\n                        productCreateForm.get('assets').value[i] || defaultProductImgPath}}\\\"\\r\\n                                 alt=\\\"designImage\\\">\\r\\n\\r\\n                    <!--<img *ngIf=\\\"processingLoadFile !== i\\\" src=\\\"{{'https://res.cloudinary.com/hmm6pjfgk/image/upload/' +-->\\r\\n                    <!--productCreateForm.get('assets').value[i]}}\\\" alt=\\\"productImage\\\">-->\\r\\n                    <img *ngIf=\\\"processingLoadFile === i\\\" src=\\\"{{productCreateForm.get('assets').value[i]}}\\\" alt=\\\"productImage\\\">\\r\\n                    <div *ngIf=\\\"processingLoadFile === i\\\" class=\\\"preview-div-processing\\\">\\r\\n                      <div class=\\\"spinner-wrapper\\\">\\r\\n                        <mat-spinner [diameter]=\\\"24\\\"></mat-spinner>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <p *ngIf=\\\"processingLoadFile !== i\\\" class=\\\"remove-field text-center\\\" (click)=\\\"removeFile(i)\\\">\\r\\n                    Видалити зображення</p>\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"cell\\\" fxFlex=\\\"25\\\" fxFlex.lt-md=\\\"50\\\"\\r\\n                     *ngIf=\\\"productCreateForm.get('assets').value.length < 4\\\">\\r\\n                  <div class=\\\"preview-img-wrapper\\\">\\r\\n                    <img src=\\\"{{config.imgPath +\\r\\n                      config.cloudinary.cloud_name + '/c_fill,w_180,h_180,f_auto/' + config.defaultProductImg}}\\\" alt=\\\"productImage\\\">\\r\\n                    <input #inputFile type=\\\"file\\\" (change)=\\\"addPictures($event)\\\"\\r\\n                           accept=\\\".jpg, .jpe, .jpeg, .bmp, .webp, .png\\\" style=\\\"display:none;\\\">\\r\\n\\r\\n                    <div class=\\\"preview-div-processing\\\">\\r\\n                      <div class=\\\"button-wrapper\\\">\\r\\n                        <button mat-mini-fab color=\\\"primary\\\" type=\\\"button\\\"\\r\\n                                (click)=\\\"inputFile.click();\\r\\n                                this.productCreateForm.get('_id').disable();\\r\\n                                this.productCreateForm.get('parents').at(0).disable();\\\"\\r\\n                                [disabled]=\\\"!productCreateForm.get('_id').disabled &&\\r\\n                                !productCreateForm.get('_id').valid || processingLoadFile >= 0\\\">\\r\\n                          <mat-icon>add</mat-icon>\\r\\n                        </button>\\r\\n\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"submit-button-wrapper\\\">\\r\\n              <!--<span fxFlex></span>-->\\r\\n              <button *ngIf=\\\"!editMode\\\" mat-raised-button class=\\\"full-width\\\" color=\\\"primary\\\"\\r\\n                      [disabled]=\\\"!productCreateForm.valid || processingLoadFile >= 0\\\">Створити</button>\\r\\n              <button *ngIf=\\\"editMode\\\" mat-raised-button class=\\\"full-width\\\" color=\\\"primary\\\"\\r\\n                      [disabled]=\\\"!productCreateForm.valid || processingLoadFile >= 0\\\">Зберегти</button>\\r\\n            </div>\\r\\n\\r\\n          </form>\\r\\n          </div>\\r\\n\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\"","\r\nimport {forkJoin as observableForkJoin,  Observable } from 'rxjs';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormArray, FormControl, FormGroup, FormGroupDirective, Validators } from '@angular/forms';\r\nimport { CatalogService } from '../../../services/catalog.service';\r\nimport { ICatalog } from '../../../interfaces/catalog-interface';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { IProduct } from '../../../interfaces/product-interface';\r\nimport { ProductService } from '../../../services/product.service';\r\n\r\nimport { ValidateService } from '../../../services/validate.service';\r\nimport { config } from '../../../app.config';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-product-create',\r\n  templateUrl: './product-create.component.html',\r\n  styleUrls: ['./product-create.component.scss']\r\n})\r\nexport class ProductCreateComponent implements OnInit {\r\n  config = config;\r\n  productCreateForm: FormGroup;\r\n  product: IProduct;\r\n  categories: any;\r\n  processingLoadFile = -1;\r\n  editMode = false;\r\n  edited_id: string;\r\n  /**\r\n   * directive for reset form (invalid status)\r\n   */\r\n  @ViewChild('f') productCreateFormDirective: FormGroupDirective;\r\n\r\n  constructor(\r\n    private catalogService: CatalogService,\r\n    private productService: ProductService,\r\n    private matSnackBar: MatSnackBar,\r\n    private route: ActivatedRoute,\r\n\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.productCreateForm = new FormGroup({\r\n      parents : new FormArray([this.initParents()]),\r\n      name: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(4),\r\n        Validators.maxLength(30),\r\n      ]),\r\n      description: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(4),\r\n        Validators.maxLength(150),\r\n        Validators.pattern('[a-zA-Z0-9а-яА-ЯіїєІЇЄ,.\"@%-_\\' ]+'),\r\n      ]),\r\n      dimensions: new FormGroup({\r\n        width: new FormControl('', [\r\n          Validators.pattern('[0-9]+'),\r\n          Validators.maxLength(3),\r\n        ]),\r\n        height: new FormControl('', [\r\n          Validators.pattern('[0-9]+'),\r\n          Validators.maxLength(3),\r\n        ]),\r\n      }),\r\n      _id: new FormControl({value: '', disabled: false}, [\r\n        Validators.pattern('[a-zA-Z0-9а-яА-ЯіїєІЇЄ]+'),\r\n        Validators.minLength(6),\r\n        Validators.maxLength(6),\r\n      ]),\r\n      price: new FormControl('', [\r\n        Validators.pattern('^\\\\d*\\\\.?\\\\d+$'),\r\n      ]),\r\n      discount: new FormControl('', [\r\n        Validators.pattern('^\\\\d*\\\\.?\\\\d+$'),\r\n      ]),\r\n      assets: new FormArray([]),\r\n      onMainPage: new FormControl('', [\r\n        // Validators.required,\r\n      ]),\r\n    });\r\n\r\n    this.catalogService.getDescendants('products', 0)\r\n      .subscribe( descendants => {\r\n        console.log('descendants.data', descendants.data);\r\n        this.categories = descendants.data;\r\n      },\r\n        err => this.matSnackBar.open(err.error, '',\r\n          {duration: 3000, panelClass: 'snack-bar-danger'})\r\n      );\r\n\r\n    this.route.paramMap\r\n      .subscribe(paramMap => {\r\n        if (paramMap.get('_id')) {\r\n          console.log('product editor(create) _id', paramMap.get('_id'));\r\n          this.edited_id = paramMap.get('_id');\r\n          this.editMode = true;\r\n\r\n          this.productService.getProductById(this.edited_id, 'products', null)\r\n            .subscribe(product => {\r\n\r\n              for (let i = 1; i < product.data.categories.length; i++) {\r\n                this.addParents();\r\n              }\r\n\r\n              for (let i = 0; i < product.data.files.length; i++) {\r\n                this.addAssets();\r\n              }\r\n\r\n              this.productCreateForm.patchValue(product.data);\r\n\r\n          },\r\n            err => console.log('Помилка завантаження товару для редагування', err)\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  resetForm() {\r\n    if (this.productCreateFormDirective) {\r\n\r\n      // enabling disabled fields\r\n      this.productCreateForm.get('_id').enable();\r\n      this.productCreateForm.get('parents')['controls'][0].enable();\r\n\r\n      // deleting needless controls\r\n      // categories controls array has one item on init\r\n      for (let i = this.productCreateForm.get('parents')['controls'].length; i > 1 ; i--) {\r\n        this.removeParents(i - 1);\r\n      }\r\n      // files controls array don't has elems on init\r\n      for (let i = this.productCreateForm.get('assets')['controls'].length; i > 0 ; i--) {\r\n        this.removeAssets(i - 1);\r\n      }\r\n      this.productCreateFormDirective.resetForm();\r\n    }\r\n  }\r\n\r\n  addPictures(event) {\r\n      this.processingLoadFile = this.productCreateForm.get('assets').value.length;\r\n      const file = event.target.files[0];\r\n      const checkFile = this.productService.checkFile(file);\r\n\r\n\r\n      if (!checkFile.success) {\r\n        this.matSnackBar.open(checkFile.message || 'Помилка', '',\r\n          {duration: 3000, panelClass: 'snack-bar-danger'});\r\n        this.processingLoadFile = -1;\r\n      } else {\r\n        const filesLinks = this.productCreateForm.get('assets').value;\r\n        filesLinks.push(config.imgPath + config.cloudinary + config.defaultProductImg);\r\n        this.addAssets();\r\n        this.productCreateForm.get('assets').setValue(filesLinks);\r\n        this.productService.productAddImage(file, this.productCreateForm.get('_id').value)\r\n          .subscribe(result => {\r\n              // this.previewProductImages.pop();\r\n              filesLinks.pop();\r\n              filesLinks.push(result.data);\r\n              this.productCreateForm.get('assets').setValue(filesLinks);\r\n              console.log('this.productCreateForm.get(\\'files\\').value', this.productCreateForm.get('assets').value);\r\n              // this.previewProductImages = filesLinks;\r\n              // console.log('this.previewProductImages', this.previewProductImages);\r\n              console.log(result);\r\n              this.processingLoadFile = -1;\r\n            },\r\n            err => {\r\n              this.matSnackBar.open(err.error || 'Помилка', '',\r\n                {duration: 3000, panelClass: 'snack-bar-danger'});\r\n              this.removeAssets(this.productCreateForm.get('assets').value.length - 1);\r\n              // this.previewProductImages.pop();\r\n              filesLinks.pop();\r\n              this.processingLoadFile = -1;\r\n\r\n            }\r\n          );\r\n      }\r\n  }\r\n\r\n  onProductCreateSubmit() {\r\n    // remove duplicates\r\n    const uniqueParents = [];\r\n    this.productCreateForm.getRawValue().parents\r\n      .forEach((item) => {\r\n        if (uniqueParents.indexOf(item) === -1) {\r\n          uniqueParents.push(item);\r\n        }\r\n    });\r\n\r\n    this.product = <IProduct>{\r\n      parents: uniqueParents,\r\n      _id: this.productCreateForm.getRawValue()._id, // raw because may be disabled\r\n      name: this.productCreateForm.get('name').value,\r\n      price: this.productCreateForm.get('price').value,\r\n      discount: this.productCreateForm.get('discount').value,\r\n      assets : this.productCreateForm.get('assets').value,\r\n      description : this.productCreateForm.get('description').value,\r\n      onMainPage: this.productCreateForm.get('onMainPage').value || false,\r\n      dimensions: {\r\n        width: this.productCreateForm.get('dimensions.width').value,\r\n        height: this.productCreateForm.get('dimensions.height').value,\r\n      }\r\n    };\r\n\r\n    if (this.editMode) {\r\n      // edit\r\n      this.product._id = this.edited_id;\r\n      this.productService.productEdit(this.product)\r\n        .subscribe(result => {\r\n            this.matSnackBar.open(result.message, '',\r\n              {duration: 3000});\r\n            this.resetForm();\r\n            this.editMode = false;\r\n          },\r\n          err => this.matSnackBar.open(err.error, '',\r\n            {duration: 3000, panelClass: 'snack-bar-danger'})\r\n        );\r\n\r\n    } else {\r\n      this.productService.productCreate(this.product)\r\n        .subscribe(result => {\r\n            this.matSnackBar.open(result.message, '',\r\n              {duration: 3000});\r\n            this.resetForm();\r\n          },\r\n          err => this.matSnackBar.open(err.error, '',\r\n            {duration: 3000, panelClass: 'snack-bar-danger'})\r\n        );\r\n    }\r\n\r\n  }\r\n\r\n  onSelectParents(event) {\r\n    if (event.source.ngControl.name === '0') {\r\n      this.createSku(event.value);\r\n    }\r\n  }\r\n\r\n  createSku(category) {\r\n\r\n    // const getPrefix$ = this.catalogService.getPrefix(category);\r\n    // const getSkuList$ = this.productService.getSkuList(category);\r\n\r\n    // observableForkJoin(getPrefix$, getSkuList$).subscribe(result => {\r\n    //   const prefix = result[0].data.prefix;\r\n    //   const skuList = result[1].data\r\n    //     .map(item => item.sku) // create [] from {}\r\n    //     .filter(item => item.slice(0, 2) === prefix) // take elems with needed prefix\r\n    //     .map(item => +item.slice(2)); // concat prefix, take only numbers\r\n\r\n    //     console.log('skuList', skuList);\r\n    //     let freeNumber = 1;\r\n    //     for (let i = 0; i < skuList.length; i++) {\r\n    //       if (skuList[i] - (i + 1) >= 1) {\r\n    //         freeNumber = i + 1;\r\n    //         break;\r\n    //       }\r\n    //       if (i === skuList.length - 1) {\r\n    //         freeNumber = skuList.length + 1;\r\n    //       }\r\n    //     }\r\n    //     let sku = freeNumber.toString();\r\n    //     while (sku.length < 4) {\r\n    //       sku = '0' + sku;\r\n    //     }\r\n    //     sku = prefix + sku;\r\n    //     this.productCreateForm.patchValue({sku});\r\n    // },\r\n    //       err => this.matSnackBar.open(err.error, '',\r\n    //         {duration: 3000, panelClass: 'snack-bar-danger'})\r\n    //   );\r\n  }\r\n\r\n  addParents() {\r\n    const control = <FormArray>this.productCreateForm.get('parents');\r\n    control.push(this.initParents());\r\n  }\r\n\r\n  removeParents(i: number) {\r\n    const control = <FormArray>this.productCreateForm.get('parents');\r\n    control.removeAt(i);\r\n  }\r\n\r\n  initParents() {\r\n    return new FormControl('', [\r\n        Validators.required,\r\n      ])\r\n    ;\r\n  }\r\n\r\n  addCategory() {\r\n\r\n  }\r\n\r\n  addAssets() {\r\n    const control = <FormArray>this.productCreateForm.get('assets');\r\n    control.push(this.initAssets());\r\n  }\r\n\r\n  removeAssets(i: number) {\r\n    const control = <FormArray>this.productCreateForm.get('assets');\r\n    control.removeAt(i);\r\n  }\r\n\r\n  initAssets() {\r\n    return new FormControl('file', [\r\n        // Validators.required,\r\n      ]);\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"row\\\" fxLayout=\\\"row\\\">\\r\\n  <div class=\\\"cell\\\" fxFlex=\\\"100\\\">\\r\\n    <div class=\\\"full-width-container\\\">\\r\\n      <mat-card  class=\\\"form-block\\\">\\r\\n        <mat-card-header></mat-card-header>\\r\\n        <mat-card-title>\\r\\n          <h2 *ngIf=\\\"editMode\\\" class=\\\"mat-h2\\\">Редагувати колекцію\\r\\n            <span class=\\\"accent\\\">{{productForm.get('name').value}}</span> у розділі\\r\\n            <span class=\\\"accent\\\">{{paramParentName}}</span></h2>\\r\\n          <h2 *ngIf=\\\"!editMode\\\" class=\\\"mat-h2\\\">Створити колекцію у розділі <span class=\\\"accent\\\">{{paramParentName}}</span></h2>\\r\\n        </mat-card-title>\\r\\n\\r\\n        <mat-card-content>\\r\\n          <div class=\\\"container\\\">\\r\\n\\r\\n            <form [formGroup]=\\\"productForm\\\" #f=\\\"ngForm\\\" novalidate>\\r\\n\\r\\n              <div class=\\\"row padding-bottom\\\" fxLayout=\\\"row\\\">\\r\\n                    <div class=\\\"cell\\\" fxFlex=\\\"100\\\" fxFlex.sm=\\\"50\\\" fxFlex.gt-sm=\\\"25\\\">\\r\\n                      <mat-form-field>\\r\\n                        <input matInput placeholder=\\\"Ідентифікатор\\\" formControlName=\\\"_id\\\" required>\\r\\n                        <mat-error\\r\\n                          *ngIf=\\\"(productForm.get('_id').errors?.minlength ||\\r\\n                                  productForm.get('_id').errors?.maxlength ||\\r\\n                                  productForm.get('_id').errors?.required) &&\\r\\n                                  productForm.get('_id').touched\\\">\\r\\n                          Довжина повинна бути 6 символів\\r\\n                        </mat-error>\\r\\n                        <mat-error\\r\\n                        *ngIf=\\\"productForm.get('_id').errors?.pattern &&\\r\\n                                productForm.get('_id').touched\\\">\\r\\n                        Довжина повинна бути 6 символів\\r\\n                      </mat-error>\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n                    <div class=\\\"cell\\\" fxFlex=\\\"100\\\" fxFlex.sm=\\\"50\\\" fxFlex.gt-sm=\\\"25\\\">\\r\\n                      <mat-form-field>\\r\\n                        <input matInput placeholder=\\\"Назва\\\" formControlName=\\\"name\\\" required>\\r\\n                        <mat-error\\r\\n                          *ngIf=\\\"(productForm.get('name').errors?.minlength ||\\r\\n                                  productForm.get('name').errors?.maxlength ||\\r\\n                                  productForm.get('name').errors?.required) &&\\r\\n                                  productForm.get('name').touched\\\">\\r\\n                          Довжина повинна бути від 4 до 50 символів\\r\\n                        </mat-error>\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n                    <div class=\\\"cell\\\" fxFlex=\\\"100\\\" fxFlex.sm=\\\"50\\\" fxFlex.gt-sm=\\\"25\\\">\\r\\n                      <mat-form-field>\\r\\n                        <mat-select placeholder=\\\"Публікувати\\\" formControlName=\\\"display\\\">\\r\\n                          <mat-option [value]=\\\"true\\\">\\r\\n                            Так\\r\\n                          </mat-option>\\r\\n                          <mat-option [value]=\\\"false\\\">\\r\\n                            Ні\\r\\n                          </mat-option>\\r\\n                        </mat-select>\\r\\n                        <!-- <mat-error\\r\\n                          *ngIf=\\\"productForm.get('display').errors?.required &&\\r\\n                                  productForm.get('display').touched\\\">\\r\\n                          Обов'язкове поле\\r\\n                        </mat-error> -->\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n                    <div class=\\\"cell\\\" fxFlex=\\\"100\\\" fxFlex.sm=\\\"50\\\" fxFlex.gt-sm=\\\"25\\\">\\r\\n                        <mat-form-field>\\r\\n                          <mat-select placeholder=\\\"На головній\\\" formControlName=\\\"onMainPage\\\">\\r\\n                            <mat-option [value]=\\\"true\\\">\\r\\n                              Так\\r\\n                            </mat-option>\\r\\n                            <mat-option [value]=\\\"false\\\">\\r\\n                              Ні\\r\\n                            </mat-option>\\r\\n                          </mat-select>\\r\\n                          <!-- <mat-error\\r\\n                            *ngIf=\\\"productForm.get('display').errors?.required &&\\r\\n                                    productForm.get('display').touched\\\">\\r\\n                            Обов'язкове поле\\r\\n                          </mat-error> -->\\r\\n                        </mat-form-field>\\r\\n                      </div>\\r\\n              </div>\\r\\n              <div class=\\\"row padding-bottom\\\" fxLayout=\\\"row\\\">\\r\\n                <div class=\\\"cell\\\" fxFlex=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\">\\r\\n                  <mat-form-field>\\r\\n                    <textarea matInput placeholder=\\\"Опис\\\" formControlName=\\\"description\\\" required></textarea>\\r\\n                    <mat-error\\r\\n                      *ngIf=\\\"(productForm.get('description').errors?.minlength ||\\r\\n                        productForm.get('description').errors?.maxlength ||\\r\\n                        productForm.get('description').errors?.required) &&\\r\\n                        productForm.get('description').touched\\\">\\r\\n                      Довжина повинна бути від 4 до 200 символів\\r\\n                    </mat-error>\\r\\n                    <mat-error\\r\\n                      *ngIf=\\\"productForm.get('description').errors?.pattern &&\\r\\n                        productForm.get('description').touched\\\">\\r\\n                      Не використовуйте спецыальны символи\\r\\n                    </mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"cell wrap\\\" fxFlex=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" formGroupName=\\\"dimensions\\\">\\r\\n                    <div class=\\\"item\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\">\\r\\n                        <mat-form-field>\\r\\n                          <input matInput placeholder=\\\"Ширина\\\" formControlName=\\\"width\\\">\\r\\n                          <span matSuffix>см</span>\\r\\n                          <mat-error\\r\\n                            *ngIf=\\\"productForm.get('dimensions.width').errors?.maxlength &&\\r\\n                            productForm.get('dimensions').get('width').touched\\\">\\r\\n                            Використовуйте не більше ніж три символа\\r\\n                          </mat-error>\\r\\n                          <mat-error\\r\\n                            *ngIf=\\\"productForm.get('dimensions').get('width').errors?.pattern &&\\r\\n                            productForm.get('dimensions').get('width').touched\\\">\\r\\n                            Використовуйте тількі цифри\\r\\n                          </mat-error>\\r\\n                        </mat-form-field>\\r\\n                      </div>\\r\\n                  <div class=\\\"item\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\">\\r\\n                    <mat-form-field>\\r\\n                      <input matInput placeholder=\\\"Висота\\\" formControlName=\\\"height\\\">\\r\\n                      <span matSuffix>см</span>\\r\\n                      <mat-error\\r\\n                        *ngIf=\\\"productForm.get('dimensions.height').errors?.maxlength &&\\r\\n                        productForm.get('dimensions').get('height').touched\\\">\\r\\n                        Використовуйте не більше ніж три символа\\r\\n                      </mat-error>\\r\\n                      <mat-error\\r\\n                        *ngIf=\\\"productForm.get('dimensions').get('height').errors?.pattern &&\\r\\n                        productForm.get('dimensions').get('height').touched\\\">\\r\\n                        Використовуйте тількі цифри\\r\\n                      </mat-error>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"cell wrap\\\" fxFlex=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\">\\r\\n                    <div class=\\\"item\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\">\\r\\n                        <mat-form-field>\\r\\n                            <input matInput placeholder=\\\"Ціна\\\" formControlName=\\\"price\\\" >\\r\\n                            <span matSuffix>грн</span>\\r\\n                            <mat-error\\r\\n                              *ngIf=\\\"productForm.get('price').errors?.pattern &&\\r\\n                              productForm.get('price').touched\\\">\\r\\n                              Використовуйте тількі цифри більші 0\\r\\n                            </mat-error>\\r\\n                        </mat-form-field>\\r\\n                      </div>\\r\\n                  <div class=\\\"item\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\">\\r\\n                      <mat-form-field>\\r\\n                          <input matInput placeholder=\\\"Знижка\\\" formControlName=\\\"discount\\\" >\\r\\n                          <span matSuffix>%</span>\\r\\n                          <mat-error\\r\\n                            *ngIf=\\\"productForm.get('discount').errors?.pattern &&\\r\\n                            productForm.get('discount').touched\\\">\\r\\n                            Використовуйте тількі цифри більші 0\\r\\n                          </mat-error>\\r\\n                      </mat-form-field>\\r\\n                  </div>\\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row padding-bottom\\\" fxLayout=\\\"row\\\">\\r\\n                    <div class=\\\"cell-header\\\" fxLayout=\\\"row\\\" fxFlex=\\\"100\\\">\\r\\n                        <h3 class=\\\"mat-h3 margin-0\\\">Зображення</h3>\\r\\n                      </div>\\r\\n                      <div class=\\\"cell\\\" fxFlex.xs=\\\"100\\\" fxFlex=\\\"25\\\">\\r\\n                        <div class=\\\"preview-img-wrapper\\\" >\\r\\n                          <img *ngIf=\\\"productForm.get('menuImage').value\\\" src=\\\"{{\\r\\n                              config.imgPath +\\r\\n                              config.cloudinary.cloud_name +\\r\\n                               '/c_fill,w_260,h_170,f_auto/' + productForm.get('menuImage').value}}\\\"\\r\\n                               alt=\\\"Menu Image\\\">\\r\\n                          <img *ngIf=\\\"!productForm.get('menuImage').value\\\"\\r\\n                               src=\\\"{{\\r\\n                               config.imgPath +\\r\\n                              config.cloudinary.cloud_name +\\r\\n                               '/c_fill,w_180,h_180,f_auto/'+\\r\\n                               config.defaultProductImg}}\\\" alt=\\\"Menu Image\\\">\\r\\n                          <input #inputMenuImage type=\\\"file\\\" (change)=\\\"addMenuImage($event)\\\"\\r\\n                                 accept=\\\".jpg, .jpe, .jpeg, .bmp, .webp, .png, .gif, .svg\\\" style=\\\"display:none;\\\">\\r\\n                          <div class=\\\"preview-div-processing\\\">\\r\\n                            <div *ngIf=\\\"processingLoadMenuImage\\\" class=\\\"spinner-wrapper\\\">\\r\\n                              <mat-spinner [diameter]=\\\"24\\\"></mat-spinner>\\r\\n                            </div>\\r\\n        \\r\\n        \\r\\n                            <div *ngIf=\\\"!processingLoadMenuImage\\\" class=\\\"button-wrapper\\\">\\r\\n                              <button mat-mini-fab color=\\\"primary\\\" type=\\\"button\\\"\\r\\n                                      (click)=\\\"inputMenuImage.click();\\\"\\r\\n                                      [disabled]=\\\"processingLoadMenuImage\\\">\\r\\n                                <mat-icon *ngIf=\\\"!productForm.get('menuImage').value && !processingLoadMenuImage\\\">add</mat-icon>\\r\\n                                <mat-icon *ngIf=\\\"productForm.get('menuImage').value && !processingLoadMenuImage\\\">redo</mat-icon>\\r\\n                              </button>\\r\\n        \\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"submit-button-wrapper row\\\" fxLayout=\\\"row\\\">\\r\\n                  <div class=\\\"cell\\\" fxFlex=\\\"40\\\">\\r\\n  \\r\\n                    <button mat-raised-button color=\\\"primary\\\" class=\\\"full-width\\\" type=\\\"button\\\" (click)=\\\"onProductFormSubmit(false)\\\"\\r\\n                            [disabled]=\\\"!productForm.valid || processingLoadAssets >=0\\\">\\r\\n                      Зберегти</button>\\r\\n                  </div>\\r\\n                  <div class=\\\"cell\\\" fxFlex=\\\"40\\\">\\r\\n  \\r\\n                    <button *ngIf=\\\"editMode\\\" mat-raised-button color=\\\"primary\\\" class=\\\"full-width\\\" type=\\\"button\\\" (click)=\\\"onProductFormSubmit(true)\\\"\\r\\n                              [disabled]=\\\"!productForm.valid || processingLoadAssets >=0\\\">\\r\\n                      Зберегти і повернутись</button>\\r\\n                    <button *ngIf=\\\"!editMode\\\" mat-raised-button color=\\\"primary\\\" class=\\\"full-width\\\" type=\\\"button\\\" (click)=\\\"onProductFormSubmit(true)\\\"\\r\\n                            [disabled]=\\\"!productForm.valid || processingLoadAssets >=0\\\">\\r\\n                      Створити і повернутись</button>\\r\\n                  </div>\\r\\n                    <div class=\\\"cell\\\" fxFlex=\\\"20\\\">\\r\\n                    <button mat-raised-button  type=\\\"button\\\" (click)=\\\"goBack()\\\" class=\\\"full-width\\\"\\r\\n                            [disabled]=\\\"processingLoadAssets >=0\\\">Повернутись</button>\\r\\n                  </div>\\r\\n  \\r\\n                </div>\\r\\n            </form>\\r\\n          </div>\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { FormGroupDirective, FormGroup, FormArray, FormControl, Validators } from '@angular/forms';\r\nimport { config } from '../../../app.config';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ProductService } from '../../../services/product.service';\r\nimport { CatalogService } from '../../../services/catalog.service';\r\nimport { mergeMap } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nimport { forkJoin as observableForkJoin,  Observable } from 'rxjs';\r\nimport { IProduct } from '../../../interfaces/product-interface';\r\n\r\n@Component({\r\n  selector: 'app-product-editor-form',\r\n  templateUrl: './product-editor-form.component.html',\r\n  styleUrls: ['./product-editor-form.component.scss']\r\n})\r\n\r\nexport class ProductEditorFormComponent implements OnInit {\r\n  @ViewChild('f') productFormDirective: FormGroupDirective;\r\n  config = config;\r\n  productForm: FormGroup;\r\n\r\n  editMode = false;\r\n  processingLoadAssets = -1;\r\n  processingLoadMainImage = false;\r\n  processingLoadMenuImage = false;\r\n\r\n  paramEdited_id: string;\r\n  paramParent_id: string;\r\n  paramParentName: string;\r\n  parents: string[];\r\n\r\n  product: IProduct;\r\n\r\n  constructor(\r\n    private matSnackBar: MatSnackBar,\r\n    private route: ActivatedRoute,\r\n    private location: Location,\r\n    private productService: ProductService,\r\n    private catalogService: CatalogService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.productForm = new FormGroup({\r\n      parents : new FormArray([]),\r\n      assets: new FormArray([]),\r\n\r\n      _id: new FormControl({value: '', disabled: false}, [\r\n        Validators.required,\r\n        Validators.pattern('[a-z0-9]+'),\r\n        Validators.minLength(7),\r\n        Validators.maxLength(7),\r\n      ]),\r\n      name: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(4),\r\n        Validators.maxLength(30),\r\n      ]),\r\n      display: new FormControl(true, [\r\n      ]),\r\n      onMainPage: new FormControl(false, [\r\n      ]),\r\n      description: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(4),\r\n        Validators.maxLength(200),\r\n        Validators.pattern('[a-zA-Z0-9а-яА-ЯіїєІЇЄ,.\"@%-_\\' ]+'),\r\n      ]),\r\n      dimensions: new FormGroup({\r\n        width: new FormControl('', [\r\n          Validators.pattern('[0-9]+'),\r\n          Validators.maxLength(3),\r\n        ]),\r\n        height: new FormControl('', [\r\n          Validators.pattern('[0-9]+'),\r\n          Validators.maxLength(3),\r\n        ]),\r\n      }),\r\n      price: new FormControl('', [\r\n        Validators.pattern('^\\\\d*\\\\.?\\\\d+$'),\r\n      ]),\r\n      discount: new FormControl(0, [\r\n        Validators.pattern('[0-9]{1,2}'),\r\n      ]),\r\n      mainImage: new FormControl(this.config.defaultProductImg, []),\r\n      menuImage: new FormControl(this.config.defaultProductImg, []),\r\n    });\r\n\r\n    this.route.paramMap.pipe(\r\n      mergeMap(params => {\r\n        this.paramEdited_id = params.get('_id');\r\n        this.paramParent_id = params.get('parentCategory_id');\r\n        this.paramParentName = params.get('parentCategoryName');\r\n        if (!this.paramEdited_id) {\r\n          return of(null);\r\n        }\r\n        return this.productService.getProductById(this.paramEdited_id, 'products', false);\r\n      })\r\n    )\r\n    .subscribe(result => {\r\n        if (result) {\r\n          // edit product\r\n          console.log('result edit', result);\r\n          this.editMode = true;\r\n          // this.parents = result.data.parents;\r\n\r\n          for (let i = 0; i < result.data.assets.length; i++) {\r\n            this.addAssetsControl();\r\n          }\r\n          console.log(' result.data.parents.length',  result.data.parents.length);\r\n          for (let i = 0; i < result.data.parents.length; i++) {\r\n            this.addParentsControl();\r\n          }\r\n          this.productForm.patchValue(result.data);\r\n          this.productForm.get('_id').disable();\r\n        } else {\r\n          // new product\r\n          console.log('result new', result);\r\n          // this.parents = [this.paramParent_id];\r\n          this.addParentsControl();\r\n          this.productForm.get('parents').setValue([this.paramParent_id]);\r\n          this._createSku(this.paramParent_id);\r\n        }\r\n      },\r\n      err => console.log('Помилка', err)\r\n    );\r\n  }\r\n\r\n  _createSku(parent: string) {\r\n    const getPrefix$ = this.catalogService.getPrefix(parent);\r\n    const getSkuList$ = this.productService.getSkuList();\r\n\r\n    observableForkJoin(getPrefix$, getSkuList$).subscribe(result => {\r\n      const prefix = result[0].data.prefix;\r\n\r\n      const skuList = result[1]\r\n        .map(item => item._id) // create [] from {}\r\n        .filter(item => item.slice(0, 3) === prefix) // take elems with needed prefix\r\n        .map(item => +item.slice(3)); // concat prefix, take only numbers\r\n\r\n        let freeNumber = 1;\r\n        for (let i = 0; i < skuList.length; i++) {\r\n          if (skuList[i] - (i + 1) >= 1) {\r\n            freeNumber = i + 1;\r\n            break;\r\n          }\r\n          if (i === skuList.length - 1) {\r\n            freeNumber = skuList.length + 1;\r\n          }\r\n        }\r\n        let sku = freeNumber.toString();\r\n        while (sku.length < 4) {\r\n          sku = '0' + sku;\r\n        }\r\n        sku = prefix + sku;\r\n        this.productForm.patchValue({_id: sku});\r\n    },\r\n          err => this.matSnackBar.open(err.error, '',\r\n            {duration: 3000, panelClass: 'snack-bar-danger'})\r\n      );\r\n  }\r\n\r\n  // addMainImage(event) {\r\n  //   this.processingLoadMainImage = true;\r\n  //   const file = event.target.files[0];\r\n  //   const checkFile = this.productService.checkFile(file);\r\n\r\n  //   if (!checkFile.success) {\r\n  //     this.matSnackBar.open(checkFile.message || 'Помилка', '',\r\n  //       {duration: 3000, panelClass: 'snack-bar-danger'});\r\n  //     this.processingLoadMainImage = false;\r\n  //   } else {\r\n  //     this.productService.productAddMainImage(file, this.productForm.get('_id').value)\r\n  //       .subscribe(result => {\r\n  //           this.productForm.get('mainImage').setValue(result.data);\r\n  //           this.processingLoadMainImage = false;\r\n  //         },\r\n  //         err => {\r\n  //           this.matSnackBar.open(err.error || 'Помилка', '',\r\n  //             {duration: 3000, panelClass: 'snack-bar-danger'});\r\n  //           this.processingLoadMainImage = false;\r\n  //         }\r\n  //       );\r\n  //   }\r\n  // }\r\n\r\n  addMenuImage(event) {\r\n    this.processingLoadMenuImage = true;\r\n    const file = event.target.files[0];\r\n    const checkFile = this.productService.checkFile(file);\r\n\r\n    if (!checkFile.success) {\r\n      this.matSnackBar.open(checkFile.message || 'Помилка', '',\r\n        {duration: 3000, panelClass: 'snack-bar-danger'});\r\n      this.processingLoadMenuImage = false;\r\n    } else {\r\n      this.productService.productAddMenuImage(file, this.productForm.get('_id').value)\r\n        .subscribe(result => {\r\n            this.productForm.get('menuImage').setValue(result.data);\r\n            this.processingLoadMenuImage = false;\r\n          },\r\n          err => {\r\n            this.matSnackBar.open(err.error || 'Помилка', '',\r\n              {duration: 3000, panelClass: 'snack-bar-danger'});\r\n            this.processingLoadMenuImage = false;\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  onProductFormSubmit(goBackAndReset: boolean): void {\r\n\r\n    this.product = <IProduct>{\r\n      parents: this.productForm.get('parents').value,\r\n      _id: this.productForm.getRawValue()._id, // raw because may be disabled\r\n      name: this.productForm.get('name').value,\r\n      price: this.productForm.get('price').value,\r\n      discount: this.productForm.get('discount').value,\r\n      // assets : this.productForm.get('assets').value,\r\n      description : this.productForm.get('description').value,\r\n      onMainPage: this.productForm.get('onMainPage').value,\r\n      display: this.productForm.get('display').value,\r\n      mainImage: this.productForm.get('mainImage').value,\r\n      menuImage: this.productForm.get('menuImage').value,\r\n      dimensions: {\r\n        width: this.productForm.get('dimensions.width').value,\r\n        height: this.productForm.get('dimensions.height').value,\r\n      }\r\n    };\r\n\r\n    this.productService.productUpsert(this.product)\r\n    .subscribe(result => {\r\n        console.log('result', result.data);\r\n        this.matSnackBar.open(result.message, '',\r\n          {duration: 3000});\r\n        if (goBackAndReset) {\r\n          this.goBack();\r\n          this.resetForm();\r\n          this.editMode = false;\r\n        } else {\r\n          this.editMode = true;\r\n        }\r\n      },\r\n      err => this.matSnackBar.open(err.error, '',\r\n        {duration: 3000, panelClass: 'snack-bar-danger'})\r\n    );\r\n\r\n  }\r\n\r\n  resetForm() {\r\n    this.productFormDirective.resetForm();\r\n  }\r\n\r\n  goBack() {\r\n    this.location.back();\r\n  }\r\n\r\n  addParentsControl() {\r\n    const control = <FormArray>this.productForm.get('parents');\r\n    control.push(this.initParentsControl());\r\n  }\r\n\r\n  removeParentsControl(i: number) {\r\n    const control = <FormArray>this.productForm.get('parents');\r\n    control.removeAt(i);\r\n  }\r\n\r\n  initParentsControl() {\r\n    return new FormControl('', [\r\n        Validators.required,\r\n      ])\r\n    ;\r\n  }\r\n\r\n  addAssetsControl() {\r\n    const control = <FormArray>this.productForm.get('assets');\r\n    control.push(this.initAssetsControl());\r\n  }\r\n\r\n  removeAssetsControl(i: number) {\r\n    const control = <FormArray>this.productForm.get('assets');\r\n    control.removeAt(i);\r\n  }\r\n\r\n  initAssetsControl() {\r\n    return new FormControl('file', [\r\n        // Validators.required,\r\n      ]);\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"row\\\" fxLayout=\\\"row\\\">\\r\\n  <div class=\\\"cell\\\" fxFlex=\\\"100\\\">\\r\\n\\r\\n    <div class=\\\"container\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"cell\\\">\\r\\n          <h2 class=\\\"mat-h2\\\">Редактор виробів</h2>\\r\\n        </div>\\r\\n      </div>\\r\\n      <form [formGroup]=\\\"catalogForm\\\" #f=\\\"ngForm\\\">\\r\\n        <div class=\\\"row\\\" fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\">\\r\\n          <div formArrayName=\\\"parents\\\" class=\\\"cell\\\" fxFlex.sm=\\\"50\\\" fxFlex.md=\\\"33.3\\\" fxFlex.gt-md=\\\"25\\\"\\r\\n               *ngFor=\\\"let categoryBlock of catalogForm.get('parents')['controls']; let i = index\\\">\\r\\n\\r\\n                <mat-select placeholder=\\\"Виберіть категорію\\\" formControlName=\\\"{{i}}\\\" required\\r\\n                            (selectionChange)=\\\"onSelectCategory($event, i)\\\">\\r\\n                  <mat-option *ngFor=\\\"let child of children[i]\\\" [value]=\\\"child._id\\\">\\r\\n                    {{child.name}}\\r\\n                  </mat-option>\\r\\n            </mat-select>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n      </form>\\r\\n\\r\\n      <div *ngIf=\\\"noMoreChildren\\\" class=\\\"row\\\" fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\">\\r\\n        <div class=\\\"cell\\\" fxFlex.sm=\\\"50\\\" fxFlex.md=\\\"33.3\\\" fxFlex.gt-md=\\\"25\\\">\\r\\n          <div class=\\\"preview-img-wrapper\\\">\\r\\n            <img src=\\\"{{\\r\\n                        config.imgPath +\\r\\n                        config.cloudinary.cloud_name +\\r\\n                        '/c_fill,w_180,h_180,f_auto/' +\\r\\n                        config.defaultProductImg}}\\\" alt=\\\"product\\\">\\r\\n            <div class=\\\"preview-div-processing\\\">\\r\\n              <div class=\\\"button-wrapper\\\">\\r\\n                <button mat-mini-fab color=\\\"primary\\\" type=\\\"button\\\"\\r\\n                        [routerLink]=\\\"['/dashboard', 'product-editor-new', parentCategory_id, parentCategoryName]\\\"\\r\\n                        [routerLinkActive]=\\\"['accent-background']\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\">\\r\\n                  <mat-icon>add</mat-icon>\\r\\n                </button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div *ngFor=\\\"let product of products\\\"  class=\\\"cell\\\" fxFlex.sm=\\\"50\\\" fxFlex.md=\\\"33.3\\\" fxFlex.gt-md=\\\"25\\\">\\r\\n          <app-product-item-brief [product]=\\\"product\\\" [parentCategory_id]=\\\"parentCategory_id\\\" [parentCategoryName]=\\\"parentCategoryName\\\"></app-product-item-brief>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { of } from 'rxjs/index';\r\nimport { mergeMap } from 'rxjs/operators';\r\nimport { CatalogService } from '../../../services/catalog.service';\r\nimport { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ProductService } from '../../../services/product.service';\r\nimport { config } from '../../../app.config';\r\n\r\n@Component({\r\n  selector: 'app-product-editor',\r\n  templateUrl: './product-editor.component.html',\r\n  styleUrls: ['./product-editor.component.scss']\r\n})\r\nexport class ProductEditorComponent implements OnInit {\r\n  children = [];\r\n  catalogForm: FormGroup;\r\n  products: any;\r\n  parentCategory_id: string;\r\n  parentCategoryName: string;\r\n  config = config;\r\n  noMoreChildren = false;\r\n\r\n    constructor(\r\n    private catalogService: CatalogService,\r\n    private productService: ProductService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.catalogForm = new FormGroup({\r\n      parents : new FormArray([this.initParents()]),\r\n    });\r\n\r\n    this.catalogService.getChildren('products')\r\n      .subscribe(\r\n        result => this.children[0] = result.data,\r\n        err => console.log('помилка завантаження категорій', err)\r\n      );\r\n  }\r\n\r\n  onSelectCategory(event, level) {\r\n    while (level + 1 < this.catalogForm.get('parents')['controls'].length) {\r\n      this.removeParents(this.catalogForm.get('parents')['controls'].length - 1);\r\n    }\r\n\r\n    this.catalogService.getChildren(event.value).pipe(\r\n      mergeMap(children => {\r\n        if (!children.data.length) {\r\n          // if no children - show products\r\n          this.parentCategory_id = event.value;\r\n          this.parentCategoryName = event.source.triggerValue;\r\n          this.noMoreChildren = true;\r\n          this.children[level + 1] = children.data;\r\n          return this.productService.getProductsByParent(event.value, 'products', false);\r\n       } else {\r\n          this.children[level + 1] = children.data;\r\n          this.noMoreChildren = false;\r\n          this.addParents();\r\n          return this.productService.getProductsByParent(null, 'products', true);\r\n        }\r\n      })\r\n    )\r\n    .subscribe(res => {\r\n      this.products = res.data;\r\n    },\r\n      err => console.log('помилка завантаження категорій', err)\r\n    );\r\n  }\r\n\r\n  addParents() {\r\n    const control = <FormArray>this.catalogForm.get('parents');\r\n    control.push(this.initParents());\r\n  }\r\n\r\n  removeParents(i: number) {\r\n    const control = <FormArray>this.catalogForm.get('parents');\r\n    control.removeAt(i);\r\n  }\r\n\r\n  initParents() {\r\n    return new FormControl('', [\r\n      Validators.required,\r\n    ]);\r\n  }\r\n}\r\n\r\n\r\n","module.exports = \"<div class=\\\"row\\\" fxLayout=\\\"row\\\">\\r\\n  <div class=\\\"cell\\\" fxFlex=\\\"100\\\">\\r\\n\\r\\n    <div class=\\\"container\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"cell\\\">\\r\\n          <h2 class=\\\"mat-h2\\\">Інструменти</h2>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\" fxLayout=\\\"row\\\" fxLayout.gt-xs=\\\"row\\\">\\r\\n        <div class=\\\"cell\\\" fxFlex.sm=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" fxLayout=\\\"row\\\" >\\r\\n          <div fxFlex>\\r\\n            <h4 class=\\\"mat-h4\\\">favicon32x32</h4>\\r\\n          </div>\\r\\n          <div fxFlex fxLayoutAlign=\\\"center center\\\">\\r\\n            <img fxflex class=\\\"product-detail-image\\\" src=\\\"{{\\r\\n                config.imgPath +\\r\\n                config.cloudinary.cloud_name +\\r\\n                '/c_fill,w_32,h_32/' +\\r\\n                faviconFilename}}\\\"\\r\\n                 alt=\\\"icon\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\" fxLayout=\\\"row\\\" fxLayout.gt-xs=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"cell\\\" fxFlex.sm=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" fxLayout=\\\"row\\\" >\\r\\n          <div fxFlex>\\r\\n            <h4 class=\\\"mat-h4\\\"> Logo 250x90</h4>\\r\\n          </div>\\r\\n          <div fxFlex fxLayoutAlign=\\\"center center\\\">\\r\\n            <img fxflex class=\\\"product-detail-image\\\" src=\\\"{{\\r\\n                config.imgPath +\\r\\n                config.cloudinary.cloud_name +\\r\\n                '/c_fill,w_250,h_90/' +\\r\\n                logoFilename}}\\\"\\r\\n                 alt=\\\"icon\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"cell\\\" fxFlex.sm=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" fxLayout=\\\"row\\\" >\\r\\n          <div fxFlex>\\r\\n            <h4 class=\\\"mat-h4\\\">Logo 140x50</h4>\\r\\n          </div>\\r\\n          <div fxFlex fxLayoutAlign=\\\"center center\\\">\\r\\n            <img fxflex class=\\\"product-detail-image\\\" src=\\\"{{\\r\\n                config.imgPath +\\r\\n                config.cloudinary.cloud_name +\\r\\n                '/c_fill,w_140,h_50/' +\\r\\n                logoFilename}}\\\"\\r\\n                 alt=\\\"icon\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\" fxLayout=\\\"row\\\" fxLayout.gt-xs=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"cell\\\" fxFlex.sm=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" fxLayout=\\\"row\\\" >\\r\\n          <div fxFlex>\\r\\n            <h4 class=\\\"mat-h4\\\">512x512</h4>\\r\\n          </div>\\r\\n          <div fxFlex fxLayoutAlign=\\\"center center\\\">\\r\\n            <img fxflex class=\\\"product-detail-image\\\" src=\\\"{{\\r\\n              config.imgPath +\\r\\n              config.cloudinary.cloud_name +\\r\\n              '/c_fill,w_512,h_512/' +\\r\\n              iconFilename}}\\\"\\r\\n                 alt=\\\"icon\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"cell\\\" fxFlex.sm=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" fxLayout=\\\"row\\\" >\\r\\n          <div fxFlex>\\r\\n            <h4 class=\\\"mat-h4\\\">384x384</h4>\\r\\n          </div>\\r\\n          <div fxFlex fxLayoutAlign=\\\"center center\\\">\\r\\n            <img fxflex class=\\\"product-detail-image\\\" src=\\\"{{\\r\\n              config.imgPath +\\r\\n              config.cloudinary.cloud_name +\\r\\n              '/c_fill,w_384,h_384/' +\\r\\n              iconFilename}}\\\"\\r\\n                 alt=\\\"icon\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"cell\\\" fxFlex.sm=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" fxLayout=\\\"row\\\" >\\r\\n          <div fxFlex>\\r\\n            <h4 class=\\\"mat-h4\\\">192x192</h4>\\r\\n          </div>\\r\\n          <div fxFlex fxLayoutAlign=\\\"center center\\\">\\r\\n            <img fxflex class=\\\"product-detail-image\\\" src=\\\"{{\\r\\n              config.imgPath +\\r\\n              config.cloudinary.cloud_name +\\r\\n              '/c_fill,w_192,h_192/' +\\r\\n              iconFilename}}\\\"\\r\\n                 alt=\\\"icon\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"cell\\\" fxFlex.sm=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" fxLayout=\\\"row\\\" >\\r\\n          <div fxFlex>\\r\\n            <h4 class=\\\"mat-h4\\\">152x152</h4>\\r\\n          </div>\\r\\n          <div fxFlex fxLayoutAlign=\\\"center center\\\">\\r\\n            <img fxflex class=\\\"product-detail-image\\\" src=\\\"{{\\r\\n              config.imgPath +\\r\\n              config.cloudinary.cloud_name +\\r\\n              '/c_fill,w_152,h_152/' +\\r\\n              iconFilename}}\\\"\\r\\n                 alt=\\\"icon\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"cell\\\" fxFlex.sm=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" fxLayout=\\\"row\\\" >\\r\\n          <div fxFlex>\\r\\n            <h4 class=\\\"mat-h4\\\">144x144</h4>\\r\\n          </div>\\r\\n          <div fxFlex fxLayoutAlign=\\\"center center\\\">\\r\\n            <img fxflex class=\\\"product-detail-image\\\" src=\\\"{{\\r\\n              config.imgPath +\\r\\n              config.cloudinary.cloud_name +\\r\\n              '/c_fill,w_144,h_144/' +\\r\\n              iconFilename}}\\\"\\r\\n                 alt=\\\"icon\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"cell\\\" fxFlex.sm=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" fxLayout=\\\"row\\\" >\\r\\n          <div fxFlex>\\r\\n            <h4 class=\\\"mat-h4\\\">128x128</h4>\\r\\n          </div>\\r\\n          <div fxFlex fxLayoutAlign=\\\"center center\\\">\\r\\n            <img fxflex class=\\\"product-detail-image\\\" src=\\\"{{\\r\\n              config.imgPath +\\r\\n              config.cloudinary.cloud_name +\\r\\n              '/c_fill,w_128,h_128/' +\\r\\n              iconFilename}}\\\"\\r\\n                 alt=\\\"icon\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"cell\\\" fxFlex.sm=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" fxLayout=\\\"row\\\" >\\r\\n          <div fxFlex>\\r\\n            <h4 class=\\\"mat-h4\\\">96x96</h4>\\r\\n          </div>\\r\\n          <div fxFlex fxLayoutAlign=\\\"center center\\\">\\r\\n            <img fxflex class=\\\"product-detail-image\\\" src=\\\"{{\\r\\n              config.imgPath +\\r\\n              config.cloudinary.cloud_name +\\r\\n              '/c_fill,w_96,h_96/' +\\r\\n              iconFilename}}\\\"\\r\\n                 alt=\\\"icon\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"cell\\\" fxFlex.sm=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" fxLayout=\\\"row\\\" >\\r\\n          <div fxFlex>\\r\\n            <h4 class=\\\"mat-h4\\\">72x72</h4>\\r\\n          </div>\\r\\n          <div fxFlex fxLayoutAlign=\\\"center center\\\">\\r\\n            <img fxflex class=\\\"product-detail-image\\\" src=\\\"{{\\r\\n              config.imgPath +\\r\\n              config.cloudinary.cloud_name +\\r\\n              '/c_fill,w_72,h_72/' +\\r\\n              iconFilename}}\\\"\\r\\n                 alt=\\\"icon\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { config } from '../../../app.config';\r\n\r\n@Component({\r\n  selector: 'app-tools',\r\n  templateUrl: './tools.component.html',\r\n  styleUrls: ['./tools.component.scss']\r\n})\r\nexport class ToolsComponent implements OnInit {\r\n  config = config;\r\n  iconFilename: string;\r\n  faviconFilename: string;\r\n  logoFilename: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.iconFilename = config.icon + '.png';\r\n    this.faviconFilename = config.icon + '.ico';\r\n    this.logoFilename = config.logoDark + '.svg';\r\n  }\r\n}\r\n"],"sourceRoot":""}